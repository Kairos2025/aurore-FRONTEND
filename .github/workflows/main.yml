name: Flutter APK Builder (Dart 3.8.6 Guaranteed)

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  FLUTTER_VERSION: '3.19.5'  # This version includes Dart 3.8.6
  FLUTTER_HOME: '/opt/flutter'
  DART_VERSION: '3.8.6'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            curl git unzip xz-utils \
            libglu1-mesa build-essential \
            libstdc++6 clang cmake ninja-build

      - name: Clean Environment
        run: |
          sudo rm -rf /usr/local/flutter
          sudo rm -rf /opt/hostedtoolcache/flutter
          sudo rm -rf ${{ env.FLUTTER_HOME }}
          sudo rm -rf ~/.flutter
          sudo rm -rf ~/.dart*

      - name: Install Flutter with Correct Dart Version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Verify Dart Version
        run: |
          echo "=== Current Dart Version ==="
          dart --version
          
          DART_ACTUAL=$(dart --version 2>&1 | awk '{print $4}')
          if [ "$DART_ACTUAL" != "${{ env.DART_VERSION }}" ]; then
            echo "::error::Dart version mismatch! Actual: $DART_ACTUAL, Expected: ${{ env.DART_VERSION }}"
            echo "This should not happen with Flutter ${{ env.FLUTTER_VERSION }}"
            echo "Please verify the Flutter version includes Dart ${{ env.DART_VERSION }}"
            exit 1
          fi

      - name: Setup Android
        uses: android-actions/setup-android@v3

      - name: Accept Licenses
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
          yes | flutter doctor --android-licenses || true

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter pub get
          flutter build apk --release --shrink

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
