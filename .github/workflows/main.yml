name: Flutter APK Builder (Version-Enforced)

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  FLUTTER_VERSION: '3.19.5'  # Contains Dart 3.9.5
  FLUTTER_HOME: '/home/runner/verified_flutter'  # New isolated location

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Nuclear Cleanup
        run: |
          # Remove all possible Flutter installations
          sudo rm -rf /usr/local/flutter
          sudo rm -rf /opt/hostedtoolcache/flutter
          sudo rm -rf $HOME/flutter*
          sudo rm -rf $HOME/.flutter*
          sudo rm -rf $HOME/.pub-cache

      - name: Install Flutter from Official Release
        run: |
          # Download from Google's official storage
          wget -q https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${{ env.FLUTTER_VERSION }}-stable.tar.xz
          tar xf flutter_linux_${{ env.FLUTTER_VERSION }}-stable.tar.xz
          mv flutter ${{ env.FLUTTER_HOME }}
          
          # Verify the downloaded package
          ${{ env.FLUTTER_HOME }}/bin/dart --version
          if ! ${{ env.FLUTTER_HOME }}/bin/dart --version 2>&1 | grep -q "version 3.[8-9]"; then
            echo "::error::Downloaded package has wrong Dart version!"
            exit 1
          fi

          # Add to PATH
          echo "${{ env.FLUTTER_HOME }}/bin" >> $GITHUB_PATH

      - name: Force Version Check
        run: |
          echo "=== VERIFICATION ==="
          ${{ env.FLUTTER_HOME }}/bin/flutter --version
          ${{ env.FLUTTER_HOME }}/bin/dart --version
          
          # Final strict check
          DART_VERSION=$(${{ env.FLUTTER_HOME }}/bin/dart --version 2>&1 | awk '{print $4}')
          REQUIRED="3.8.0"
          if [ "$(printf '%s\n' "$REQUIRED" "$DART_VERSION" | sort -V | head -n1)" != "$REQUIRED" ]; then
            echo "::error::FATAL: Cannot get correct Dart version"
            echo "Tried Flutter ${{ env.FLUTTER_VERSION }} (should contain Dart â‰¥3.8.0)"
            echo "Detected Dart $DART_VERSION instead"
            echo "This indicates corrupted Google servers or GitHub runner issues"
            exit 1
          fi

      - name: Setup Android
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          yes | ${{ env.FLUTTER_HOME }}/bin/sdkmanager --licenses
          yes | ${{ env.FLUTTER_HOME }}/bin/flutter doctor --android-licenses

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          ${{ env.FLUTTER_HOME }}/bin/flutter pub get
          ${{ env.FLUTTER_HOME }}/bin/flutter build apk --release --shrink

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
