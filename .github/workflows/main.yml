name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.22.0'
  PROJECT_DIR: 'aurore_frontend'  # Confirmed from screenshot

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 35

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify Project Structure
        run: |
          echo "Repository contents:"
          ls -la
          echo "Project directory contents:"
          ls -la ${{ env.PROJECT_DIR }}
          if [ ! -f "${{ env.PROJECT_DIR }}/pubspec.yaml" ]; then
            echo "::error::pubspec.yaml not found in ${{ env.PROJECT_DIR }}!"
            exit 1
          fi

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: 'flutter-${{ env.FLUTTER_VERSION }}'

      - name: Verify Installation
        run: |
          flutter --version
          flutter doctor -v

      - name: Update Dependency Versions
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Update dependencies to Flutter 3.22.0 compatible versions
          sed -i \
            -e 's/test:.*/test: ^1.24.0/' \
            -e 's/firebase_core:.*/firebase_core: ^2.24.0/' \
            -e 's/firebase_analytics:.*/firebase_analytics: ^10.4.0/' \
            -e 's/flutter_lints:.*/flutter_lints: ^2.0.0/' \
            -e 's/material_color_utilities:.*/material_color_utilities: ^0.8.0/' \
            -e 's/sdk:.*/sdk: ">=3.4.0 <4.0.0"/' \
            -e 's/flutter:.*/flutter: ">=3.22.0 <4.0.0"/' \
            pubspec.yaml

          echo "Updated dependencies:"
          grep -E "test:|firebase|flutter_lints|material_color_utilities|sdk|flutter:" pubspec.yaml

      - name: Resolve Dependencies
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter pub get
          flutter pub outdated

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          set -e
          flutter clean
          flutter build apk --release \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
