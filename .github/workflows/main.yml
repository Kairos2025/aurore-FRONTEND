name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.29.3'
  PROJECT_DIR: 'aurore_frontend'
  REQUIRED_DART_VERSION: "3.8.0"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Flutter via Docker (with correct Dart version)
        run: |
          # Create Dockerfile with exact versions
          cat <<EOF > Dockerfile
          FROM ubuntu:24.04
          RUN apt-get update && apt-get install -y \
              curl \
              git \
              unzip \
              xz-utils \
              zip \
              libglu1-mesa \
              openjdk-17-jdk \
              wget

          # Install Dart 3.8.6 (known working version)
          RUN wget https://storage.googleapis.com/dart-archive/channels/stable/release/3.8.6/sdk/dartsdk-linux-x64-release.zip -O dart-sdk.zip && \
              unzip dart-sdk.zip -d /usr/lib/ && \
              rm dart-sdk.zip && \
              ln -s /usr/lib/dart-sdk/bin/dart /usr/bin/dart

          # Install Flutter
          RUN git clone https://github.com/flutter/flutter.git -b ${{ env.FLUTTER_VERSION }} --depth 1 /usr/local/flutter
          ENV PATH="\${PATH}:/usr/local/flutter/bin:/usr/lib/dart-sdk/bin"
          RUN flutter precache
          EOF

          # Build and run the container
          docker build -t flutter-build .
          docker run --rm -v $(pwd):/app flutter-build bash -c "cd /app/${{ env.PROJECT_DIR }} && flutter pub get && flutter build apk --release --no-sound-null-safety --dart-define=CI_ENV=true --split-debug-info=build/symbols/ --obfuscate"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
