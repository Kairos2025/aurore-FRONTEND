name: Build Aurore School APK

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android environment
        uses: android-actions/setup-android@v3
        with:
          ndk-version: '27.0.12077973'
          sdk-platform: '33'
          cmake-version: '3.22.1'

      - name: Install Flutter (specific version)
        run: |
          wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.29.3-stable.tar.xz
          tar xf flutter_linux_3.29.3-stable.tar.xz
          echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH

      - name: Verify environment
        run: |
          flutter doctor -v
          flutter --version
          dart --version

      - name: Clean and prepare project
        working-directory: aurore_frontend
        run: |
          flutter clean
          rm -rf .dart_tool .packages pubspec.lock

      - name: Create fresh Android project
        working-directory: aurore_frontend
        run: |
          mkdir -p ../temp_backup
          cp -r lib pubspec.yaml ../temp_backup/
          [ -d "assets" ] && cp -r assets ../temp_backup/
          [ -d "fonts" ] && cp -r fonts ../temp_backup/
          
          cd ..
          rm -rf aurore_frontend/android
          flutter create --platforms android --org com.auroreschool aurore_frontend
          cd aurore_frontend
          
          rm -rf lib
          cp -r ../temp_backup/lib .
          cp ../temp_backup/pubspec.yaml .
          [ -d "../temp_backup/assets" ] && cp -r ../temp_backup/assets .
          [ -d "../temp_backup/fonts" ] && cp -r ../temp_backup/fonts .
          rm -rf ../temp_backup

          # Configure NDK version
          sed -i '/android {/a \        ndkVersion = "27.0.12077973"' android/app/build.gradle.kts

      - name: Fix compilation issues
        working-directory: aurore_frontend
        run: |
          # Fix AuthProvider constructor
          sed -i 's/AuthProvider(dio, secureStorage, googleSignIn)/AuthProvider(dio, secureStorage)/' lib/main.dart
          
          # Ensure font files exist
          mkdir -p fonts
          touch fonts/Inter-{Regular,Medium,SemiBold,Bold}.ttf

      - name: Install dependencies
        working-directory: aurore_frontend
        run: |
          flutter pub get

      - name: Build APK with detailed logging
        working-directory: aurore_frontend
        run: |
          set -o pipefail
          flutter build apk --release --verbose 2>&1 | tee build.log
          if [ $? -ne 0 ]; then
            echo "::error::Build failed. Last 50 lines:"
            tail -n 50 build.log
            exit 1
          fi

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: aurore-school-apk
          path: aurore_frontend/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: aurore_frontend/build.log
          retention-days: 1
