name: CI - Build Aurore App

on:
  push:
    branches: [main, feature, dev]  # Run on multiple branches
  pull_request:
    branches: [main, feature, dev]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: macos-latest  # macOS for iOS and Android builds

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java for Android builds
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Fixes distribution error
          java-version: '17'

      # Step 3: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'  # Stable version
          channel: 'stable'

      # Step 4: Verify Flutter setup and project
      - name: Verify Flutter environment
        run: |
          flutter --version
          flutter doctor
          flutter pub get --verbose  # Detailed dependency installation
          flutter analyze --no-fatal-infos --status  # Initial analysis

      # Step 5: Run Dart analysis with detailed output
      - name: Run Dart analysis
        run: |
          flutter analyze --no-fatal-infos > analysis_output.txt 2>&1 || echo "Dart analysis completed with issues. Review analysis_output.txt for details."
        continue-on-error: true  # Allow pipeline to continue

      # Step 6: Upload analysis output
      - name: Upload Dart analysis output
        uses: actions/upload-artifact@v3
        with:
          name: dart-analysis-output
          path: analysis_output.txt

      # Step 7: Run tests
      - name: Run tests
        run: |
          flutter test --coverage || echo "Tests completed with issues or none found."
        continue-on-error: true

      # Step 8: Build APK
      - name: Build APK
        run: flutter build apk --release

      # Step 9: Build IPA (for iOS) with error handling
      - name: Build IPA
        run: |
          flutter build ios --release --no-codesign || echo "iOS build failed, proceeding to archive."
          if [ -d "build/ios/iphoneos" ]; then
            cd build/ios/iphoneos
            mkdir -p Payload
            mv Runner.app Payload/ 2>/dev/null || echo "Runner.app not found, skipping IPA creation."
            zip -r aurore.ipa Payload 2>/dev/null || echo "IPA creation failed."
          else
            echo "iOS build directory not found."
          fi

      # Step 10: Upload APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: aurore-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      # Step 11: Upload IPA artifact (if created)
      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: aurore-ipa
          path: build/ios/iphoneos/aurore.ipa
          if-no-files-found: ignore  # Skip if IPA isnâ€™t created
