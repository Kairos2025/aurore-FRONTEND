name: Flutter APK Builder (Stable)

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  FLUTTER_VERSION: '3.16.9'
  FLUTTER_HOME: '/opt/flutter'
  DART_VERSION: '3.8.6'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl git unzip xz-utils libglu1-mesa

      - name: Clean Environment
        run: |
          sudo rm -rf /usr/local/flutter
          sudo rm -rf /opt/hostedtoolcache/flutter
          sudo rm -rf ${{ env.FLUTTER_HOME }}

      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git -b ${{ env.FLUTTER_VERSION }} --depth 1 ${{ env.FLUTTER_HOME }}
          echo "${{ env.FLUTTER_HOME }}/bin" >> $GITHUB_PATH

      - name: Install Specific Dart SDK
        run: |
          # Get the correct Dart SDK URL from Flutter's internal files
          DART_SDK_URL=$(grep 'dart-sdk/' ${{ env.FLUTTER_HOME }}/bin/internal/engine.version | cut -d' ' -f2)
          echo "Downloading Dart SDK from: $DART_SDK_URL"
          
          # Download and extract
          mkdir -p ${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk
          curl -L $DART_SDK_URL -o dart-sdk.zip
          unzip -q dart-sdk.zip -d ${{ env.FLUTTER_HOME }}/bin/cache/
          rm dart-sdk.zip
          
          # Verify version
          DART_ACTUAL=$(${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk/bin/dart --version 2>&1 | awk '{print $4}')
          echo "Installed Dart version: $DART_ACTUAL"
          
          if [ "$DART_ACTUAL" != "${{ env.DART_VERSION }}" ]; then
            echo "::error::Dart version mismatch! Actual: $DART_ACTUAL, Required: ${{ env.DART_VERSION }}"
            exit 1
          fi

      - name: Setup Flutter Cache
        run: |
          # Pre-download dependencies
          ${{ env.FLUTTER_HOME }}/bin/flutter precache --android
          
          # Create necessary cache files
          echo "3.16.9" > ${{ env.FLUTTER_HOME }}/version
          touch ${{ env.FLUTTER_HOME }}/bin/cache/.dartignore
          
          # Fix permissions
          sudo chmod -R 755 ${{ env.FLUTTER_HOME }}

      - name: Verify Installation
        run: |
          ${{ env.FLUTTER_HOME }}/bin/flutter --version
          ${{ env.FLUTTER_HOME }}/bin/flutter doctor -v

      - name: Setup Android
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          yes | ${{ env.FLUTTER_HOME }}/bin/sdkmanager --licenses
          yes | ${{ env.FLUTTER_HOME }}/bin/flutter doctor --android-licenses

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          ${{ env.FLUTTER_HOME }}/bin/flutter pub get
          ${{ env.FLUTTER_HOME }}/bin/flutter build apk --release --shrink

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
