name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.22.0'  # Contains Dart 3.8.0
  WORKING_DIR: './aurore_frontend'
  FLUTTER_HOME: '${{ github.workspace }}/flutter'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Install Flutter
        run: |
          # Download and extract Flutter
          FLUTTER_HOME="${{ github.workspace }}/flutter"
          echo "FLUTTER_HOME=$FLUTTER_HOME" >> $GITHUB_ENV
          
          wget -q --show-progress --progress=bar:force:noscroll \
            https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz
          
          # Verify and extract
          mkdir -p "$FLUTTER_HOME"
          tar xf flutter_linux_${FLUTTER_VERSION}-stable.tar.xz -C "$FLUTTER_HOME" --strip-components=1
          echo "$FLUTTER_HOME/bin" >> $GITHUB_PATH

      - name: Verify Environment
        run: |
          echo "=== Flutter ==="
          flutter --version
          echo "=== Dart ==="
          dart --version
          echo "=== Java ==="
          java -version

      - name: Resolve Dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter pub cache repair
          flutter pub get --verbose

      - name: Build APK
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter clean
          flutter build apk --release \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.WORKING_DIR }}/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
