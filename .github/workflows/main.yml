name: Flutter APK Builder (Dart 3.8.6 Guaranteed)

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  FLUTTER_VERSION: '3.16.9'  # This version pairs with Dart 3.8.6
  FLUTTER_HOME: '/opt/flutter'
  DART_VERSION: '3.8.6'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            curl git unzip xz-utils \
            libglu1-mesa build-essential \
            libstdc++6 clang cmake ninja-build

      - name: Nuclear Clean
        run: |
          sudo rm -rf /usr/local/flutter
          sudo rm -rf /opt/hostedtoolcache/flutter
          sudo rm -rf ${{ env.FLUTTER_HOME }}
          sudo rm -rf ~/.flutter
          sudo rm -rf ~/.dart*

      - name: Install Flutter with Correct Dart Version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Verify Dart Version
        id: dart_check
        run: |
          echo "=== Current Dart Version ==="
          dart --version
          
          DART_ACTUAL=$(dart --version 2>&1 | awk '{print $4}')
          if [ "$DART_ACTUAL" == "${{ env.DART_VERSION }}" ]; then
            echo "::notice::Correct Dart version $DART_ACTUAL detected"
            echo "::set-output name=correct_version::true"
          else
            echo "::warning::Dart version mismatch! Actual: $DART_ACTUAL, Expected: ${{ env.DART_VERSION }}"
            echo "::set-output name=correct_version::false"
          fi

      - name: Install Dart SDK from GitHub Cache (Fallback)
        if: steps.dart_check.outputs.correct_version != 'true'
        uses: actions/cache@v3
        id: dart-cache
        with:
          path: ${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk
          key: dart-sdk-${{ env.DART_VERSION }}

      - name: Force Correct Dart Version (Final Fallback)
        if: steps.dart_check.outputs.correct_version != 'true' && steps.dart-cache.outputs.cache-hit != 'true'
        run: |
          echo "=== Installing Dart ${{ env.DART_VERSION }} via Docker ==="
          sudo docker run --rm \
            -v ${{ env.FLUTTER_HOME }}/bin/cache:/flutter/cache \
            alpine/flutter:${{ env.FLUTTER_VERSION }} \
            sh -c "cp -r /flutter/bin/cache/dart-sdk /flutter/cache/"
          
          # Verify installation
          DART_ACTUAL=$(${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk/bin/dart --version 2>&1 | awk '{print $4}')
          if [ "$DART_ACTUAL" != "${{ env.DART_VERSION }}" ]; then
            echo "::error::Failed to install correct Dart version"
            exit 1
          fi

      - name: Final Version Verification
        run: |
          echo "=== Final Version Check ==="
          flutter --version
          dart --version
          
          DART_ACTUAL=$(dart --version 2>&1 | awk '{print $4}')
          if [ "$DART_ACTUAL" != "${{ env.DART_VERSION }}" ]; then
            echo "::error::Critical failure: Dart version still not correct!"
            exit 1
          fi

      - name: Setup Android
        uses: android-actions/setup-android@v3

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter pub get
          flutter build apk --release --shrink

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
