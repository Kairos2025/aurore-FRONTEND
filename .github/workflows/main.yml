name: Flutter Build APK

on:
  push:
    branches: [main]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Xmx6144m"
  _JAVA_OPTIONS: "-Xmx6144m -XX:MaxMetaspaceSize=1024m"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-licenses: true
          android-sdk-platform: 34
          build-tools-version: '34.0.0'
          cmake-version: '3.22.1'
          ndk-version: '25.2.9519653'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
          cache: true
          cache-key: flutter-${{ hashFiles('**/pubspec.yaml') }}

      - name: Recreate Android Project
        run: |
          # Remove existing android directory if exists
          if [ -d "android" ]; then
            rm -rf android
          fi
          
          # Regenerate Android project
          flutter create --platforms android --project-name app .
          
          # Verify gradlew exists
          if [ ! -f "android/gradlew" ]; then
            echo "Generating gradle wrapper..."
            cd android && gradle wrapper --gradle-version 8.0.2 && cd ..
          fi
          
          # Make gradlew executable
          chmod +x android/gradlew
        shell: bash

      - name: Build APK
        run: |
          set -ex
          
          # Get dependencies
          flutter pub get
          
          # Build with detailed logging
          cd android && ./gradlew clean assembleRelease \
            --stacktrace \
            --info \
            --no-daemon \
            --no-build-cache \
            > ../gradle.log 2>&1 || (cat ../gradle.log && exit 1)
          
          # Verify APK exists
          if [ ! -f "../build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "APK generation failed!"
            find ../build -type f | xargs ls -la
            exit 1
          fi
        shell: bash

      - name: Upload Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            gradle.log
            android/build/**/*.log
          retention-days: 7

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
