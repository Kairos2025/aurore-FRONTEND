name: Build Aurore School APK

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android environment
        uses: android-actions/setup-android@v3
        with:
          ndk-version: '27.0.12077973'
          sdk-platform: '33'
          cmake-version: '3.22.1'

      - name: Set up Flutter with pre-cache
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
          cache: true
          cache-key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          cache-path: ${{ runner.tool_cache }}/flutter

      - name: Verify Flutter installation
        run: |
          flutter doctor -v
          flutter --version
          dart --version

      - name: Recreate Android project structure
        working-directory: aurore_frontend
        run: |
          # Clean Flutter build cache
          flutter clean

          # Backup essential files
          mkdir -p ../flutter_backup
          cp -r lib pubspec.yaml ../flutter_backup/
          [ -d "assets" ] && cp -r assets ../flutter_backup/
          [ -d "test" ] && cp -r test ../flutter_backup/
          [ -d "fonts" ] && cp -r fonts ../flutter_backup/

          # Completely recreate Android project
          cd ..
          rm -rf aurore_frontend/android
          flutter create --platforms android --org com.auroreschool aurore_frontend
          cd aurore_frontend

          # Restore files
          rm -rf lib
          cp -r ../flutter_backup/lib .
          cp ../flutter_backup/pubspec.yaml .
          [ -d "../flutter_backup/assets" ] && cp -r ../flutter_backup/assets .
          [ -d "../flutter_backup/test" ] && cp -r ../flutter_backup/test .
          [ -d "../flutter_backup/fonts" ] && cp -r ../flutter_backup/fonts .
          rm -rf ../flutter_backup

          # Configure NDK version
          sed -i '/android {/a \        ndkVersion = "27.0.12077973"' android/app/build.gradle.kts

      - name: Fix compilation issues
        working-directory: aurore_frontend
        run: |
          # Fix AuthProvider constructor
          sed -i 's/AuthProvider(dio, secureStorage, googleSignIn)/AuthProvider(dio, secureStorage)/' lib/main.dart

          # Ensure font files exist
          declare -a fonts=("Inter-Regular.ttf" "Inter-Medium.ttf" "Inter-SemiBold.ttf" "Inter-Bold.ttf")
          for font in "${fonts[@]}"; do
            [ -f "fonts/$font" ] || touch "fonts/$font"
          done

      - name: Install dependencies with retry
        working-directory: aurore_frontend
        run: |
          for i in {1..3}; do
            flutter pub get && break || sleep 5
          done

      - name: Build APK with detailed logging
        working-directory: aurore_frontend
        run: |
          flutter build apk --release --verbose 2>&1 | tee build.log
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "::error::Build failed. Last 100 lines:"
            tail -n 100 build.log
            exit 1
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: aurore-school-apk
          path: aurore_frontend/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: aurore_frontend/build.log
          retention-days: 1
