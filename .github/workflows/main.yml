name: Flutter Build APK

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-licenses: true
          android-sdk-platform: 34
          build-tools-version: 34.0.0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
          cache: true
          cache-key: flutter-${{ hashFiles('**/pubspec.yaml') }}

      - name: Ensure Gradle Directory Exists
        run: |
          mkdir -p ~/.gradle
        shell: bash

      - name: Fix Gradle Java Home
        run: |
          if [ -d ~/.gradle ]; then
            find ~/.gradle -name "gradle.properties" -exec sed -i '/org.gradle.java.home/d' {} \; || echo "No gradle.properties files found, skipping sed."
          fi
          echo "org.gradle.java.home=$JAVA_HOME" > ~/.gradle/gradle.properties
          echo "android.jvmargs=-Xmx4096m" >> ~/.gradle/gradle.properties
          echo "org.gradle.jvmargs=-Xmx4096m -XX:+HeapDumpOnOutOfMemoryError" >> ~/.gradle/gradle.properties
          echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties  # Disable Gradle daemon for CI
          echo "org.gradle.parallel=true" >> ~/.gradle/gradle.properties  # Enable parallel builds
        shell: bash

      - name: Accept Android Licenses
        run: |
          yes | sdkmanager --licenses || true  # Ensure all licenses are accepted
        shell: bash

      - name: Flutter Build Preparation
        run: |
          flutter doctor --verbose
          flutter clean
          flutter pub get
        shell: bash

      - name: Check Signing Configuration
        run: |
          if [ ! -f "android/key.properties" ]; then
            echo "Error: android/key.properties not found. Release builds require signing configuration."
            echo "Create android/key.properties with the following content:"
            echo "storeFile=<path-to-keystore>"
            echo "storePassword=<password>"
            echo "keyAlias=<alias>"
            echo "keyPassword=<password>"
            exit 1
          fi
        shell: bash

      - name: Build APK with Debug Output
        run: |
          flutter build apk --release --verbose > build-apk.log 2>&1 || (cat build-apk.log && exit 1)
        shell: bash

      - name: Upload Build Logs
        if: failure()  # Upload logs only if the build fails
        uses: actions/upload-artifact@v4
        with:
          name: build-apk-logs
          path: build-apk.log
          retention-days: 7

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
