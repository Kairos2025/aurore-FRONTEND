name: AURORE School APK Builder

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      REPO_DIR: 'aurore-FRONTEND'
      PROJECT_DIR: 'aurore_frontend'
      PACKAGE_NAME: 'com.auroreschool'
      GRADLE_VERSION: '8.10.2'
      AGP_VERSION: '8.4.0'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_DIR }}

      - name: Validate Project Structure
        run: |
          cd ${{ env.REPO_DIR }}
          [ -d "$PROJECT_DIR" ] || { echo "Project directory missing!"; exit 1; }
          [ -f "$PROJECT_DIR/pubspec.yaml" ] || { echo "pubspec.yaml not found!"; exit 1; }

      - name: Force Android Project Creation
        working-directory: ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}
        run: |
          # Preserve existing code
          mkdir -p tmp_backup
          rsync -av --exclude='android/' --exclude='build/' --exclude='.dart_tool/' ./ tmp_backup/

          # Regenerate Android structure
          flutter create --platforms android --org $PACKAGE_NAME .

          # Restore code while preserving new Android structure
          rsync -av --ignore-existing tmp_backup/ ./
          rm -rf tmp_backup

          # Final verification
          [ -f "android/gradlew" ] || { echo "Gradle wrapper generation failed!"; exit 1; }

      - name: Modernize Gradle
        working-directory: ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}/android
        run: |
          # Update Gradle wrapper
          ./gradlew wrapper --gradle-version $GRADLE_VERSION --distribution-type all
          
          # Update AGP version in Kotlin DSL
          sed -i "s/id(\"com.android.application\") version \".*\"/id(\"com.android.application\") version \"$AGP_VERSION\"/" app/build.gradle.kts
          
          # Configure NDK
          echo "android.ndkVersion=\"27.0.12077973\"" >> gradle.properties

      - name: Build APK
        working-directory: ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}
        run: |
          flutter clean
          flutter pub get
          flutter build apk --release \
            --dart-define=APP_NAME="AURORE SCHOOL" \
            --split-debug-info=build/debug-info

      - name: Verify Artifacts
        run: |
          cd ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}
          [ -f "build/app/outputs/flutter-apk/app-release.apk" ] || { echo "APK not generated!"; exit 1; }

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: school-apk
          path: |
            ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
