name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  WORKING_DIR: './aurore_frontend'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Flutter (with specific version)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.9'  # Version that includes Dart 3.8.0
          channel: 'stable'
          cache: true

      - name: Verify Installation
        run: |
          echo "=== Installed Versions ==="
          flutter --version
          dart --version
          if [[ ! $(dart --version) =~ "3.8.0" ]]; then
            echo "::error::Wrong Dart version installed"
            exit 1
          fi

      - name: Prepare Project
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          # Update SDK constraints to match exactly what we installed
          sed -i \
            -e 's/sdk: ">=.*"/sdk: ">=3.8.0 <4.0.0"/' \
            -e 's/flutter: ">=.*"/flutter: ">=3.16.0"/' \
            pubspec.yaml

          # Set compatible dependency versions
          sed -i \
            -e 's/firebase_core: .*/firebase_core: ^4.3.0/' \
            -e 's/firebase_auth: .*/firebase_auth: ^6.3.0/' \
            -e 's/flutter_svg: .*/flutter_svg: ^2.1.0/' \
            -e 's/http: .*/http: ^1.1.0/' \
            -e 's/material_color_utilities: .*/material_color_utilities: 0.11.1/' \
            pubspec.yaml

          # Update Gradle files directly (no project recreation)
          sed -i \
            -e 's/agp:.*/agp:7.4.2/' \
            -e 's/gradle:.*/gradle:7.5/' \
            android/build.gradle android/app/build.gradle

      - name: Resolve Dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter pub get --verbose || {
            echo "::warning::First attempt failed, running pub upgrade..."
            flutter pub upgrade --major-versions
          }

      - name: Build APK
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter clean
          flutter build apk --release \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.WORKING_DIR }}/build/app/outputs/flutter-apk/app-release.apk
