name: Flutter CI/CD with Dart 3.8.0+

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  FLUTTER_VERSION: '3.30.0'  # Contains Dart 3.8.0+
  FLUTTER_HOME: '/home/runner/flutter'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Correct Flutter Version
        run: |
          # Clean installation
          rm -rf ${{ env.FLUTTER_HOME }}
          mkdir -p ${{ env.FLUTTER_HOME }}

          # Official download URL
          FLUTTER_URL="https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${{ env.FLUTTER_VERSION }}-stable.tar.xz"
          
          # Download and extract in one step
          curl -L --retry 3 "$FLUTTER_URL" | tar -xJ -C ${{ env.FLUTTER_HOME }} --strip-components=1
          
          # Verify installation
          if [ ! -f "${{ env.FLUTTER_HOME }}/bin/flutter" ]; then
            echo "::error::Flutter installation failed"
            exit 1
          fi
          
          echo "${{ env.FLUTTER_HOME }}/bin" >> $GITHUB_PATH

      - name: Verify Dart Version
        run: |
          echo "Flutter version:"
          flutter --version
          
          echo "Dart version:"
          dart --version
          
          DART_VERSION=$(dart --version 2>&1 | awk '{print $4}')
          REQUIRED="3.8.0"
          if [ "$(printf '%s\n' "$REQUIRED" "$DART_VERSION" | sort -V | head -n1)" != "$REQUIRED" ]; then
            echo "::error::Insufficient Dart version: $DART_VERSION < $REQUIRED"
            exit 1
          fi

      - name: Setup Android Licenses
        run: |
          mkdir -p ~/.android
          echo -e "8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e" > ~/.android/licenses.properties

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter pub get
          flutter build apk --release --no-sound-null-safety --shrink

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
