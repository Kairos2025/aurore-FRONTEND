name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.29.3'
  PROJECT_DIR: 'aurore_frontend'
  DART_VERSION: '3.8.6'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      dart-download-url: ${{ steps.setup-dart.outputs.download-url }}
    steps:
      - name: Determine Dart Download URL
        id: setup-dart
        run: |
          # Try multiple known-good download sources
          URLS=(
            "https://github.com/dart-lang/sdk/releases/download/${{ env.DART_VERSION }}/dartsdk-linux-x64-release.zip"
            "https://storage.flutter-io.cn/dart-archive/channels/stable/release/${{ env.DART_VERSION }}/sdk/dartsdk-linux-x64-release.zip"
            "https://mirrors.tuna.tsinghua.edu.cn/dart-archive/channels/stable/release/${{ env.DART_VERSION }}/sdk/dartsdk-linux-x64-release.zip"
          )
          
          for url in "${URLS[@]}"; do
            if curl --output /dev/null --silent --head --fail "$url"; then
              echo "download-url=$url" >> $GITHUB_OUTPUT
              echo "Using Dart SDK from: $url"
              exit 0
            fi
            echo "Failed to access: $url"
          done
          
          echo "::error::All Dart SDK download sources failed"
          exit 1

  build:
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Dart SDK
        run: |
          echo "Downloading Dart SDK from: ${{ needs.setup.outputs.dart-download-url }}"
          curl -L "${{ needs.setup.outputs.dart-download-url }}" -o dart-sdk.zip
          unzip dart-sdk.zip -d /usr/lib/
          sudo ln -s /usr/lib/dart-sdk/bin/dart /usr/bin/dart
          
          echo "Installed Dart version:"
          dart --version

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Setup Android Environment
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          yes | sdkmanager --licenses || true
          flutter doctor --android-licenses

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            clang \
            cmake \
            ninja-build \
            pkg-config \
            liblzma-dev

      - name: Resolve Dependencies
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter pub get

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter build apk --release \
            --no-sound-null-safety \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
