name: Build Aurore School APK

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      FLUTTER_CHANNEL: stable
      FLUTTER_VERSION: 3.29.3
      GRADLE_VERSION: 8.9
      AGP_VERSION: 8.4.0
      NDK_VERSION: 27.0.12077973
      JAVA_VERSION: '17'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout: |
            /*
            !**/ios
            !**/windows

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          check-latest: true

      - name: Validate Java Version
        run: |
          java -version 2>&1 | grep -q "openjdk version \"$JAVA_VERSION" || (echo "Java version mismatch!" && exit 1)

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          sdk-platform: '34'
          cmake-version: '3.22.1'
          addon-licenses: |
            android-sdk-license
            android-sdk-preview-license

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        id: flutter
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
          cache-key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
          cache-path: ${{ github.workspace }}/.pub-cache

      - name: Verify Flutter Installation
        run: |
          echo "Flutter path: $(which flutter)"
          flutter --version
          flutter doctor -v

      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            android/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties') }}

      - name: Prepare Project Structure
        run: |
          # Preserve existing android configuration
          if [ -d "android" ]; then
            echo "Existing android directory found, preserving..."
            mv android android_backup
          fi
          
          flutter create --platforms android --org com.auroreschool .
          
          # Restore original android config if existed
          if [ -d "android_backup" ]; then
            rm -rf android
            mv android_backup android
          fi
          
          # Sync code with conflict resolution
          rsync -av --ignore-existing \
            --exclude='.dart_tool/' \
            --exclude='build/' \
            --exclude='android/' \
            --exclude='ios/' \
            --exclude='windows/' \
            . aurore_app/

      - name: Configure Build Environment
        working-directory: aurore_app
        run: |
          # Update Gradle wrapper with retry
          for i in {1..3}; do
            ./gradlew wrapper --gradle-version $GRADLE_VERSION --distribution-type all && break
            sleep 5
          done
          
          # Validate build files
          [ -f "android/app/build.gradle" ] || [ -f "android/app/build.gradle.kts" ] || exit 1
          
          # Ensure NDK version
          echo "android.ndkVersion=$NDK_VERSION" >> android/gradle.properties

      - name: Build Release APK
        working-directory: aurore_app
        run: |
          set -eo pipefail
          flutter pub upgrade --major-versions
          flutter build apk --release --verbose \
            --dart-define=CI_BUILD=true \
            --split-debug-info=/debug-info \
            --obfuscate
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

      - name: Archive Debug Symbols
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: debug-symbols
          path: aurore_app/debug-info/
          retention-days: 30

      - name: Upload APK Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: school-apk
          path: aurore_app/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

      - name: Diagnostic Info (on failure)
        if: ${{ failure() }}
        run: |
          echo "=== Environment Variables ==="
          printenv
          echo "=== Flutter Info ==="
          which flutter || echo "Flutter not found in PATH"
          flutter doctor -v || true
          echo "=== Java Info ==="
          java -version
          echo "=== Gradle Info ==="
          ./gradlew --version || true
          echo "=== Android SDK Info ==="
          sdkmanager --list || true
