name: Build Aurore App

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.0'
  JAVA_VERSION: '17'  # Keep as string but will be handled correctly
  WORKING_DIR: 'aurore_frontend'

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Debug repository state
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          ls -la $WORKING_DIR || echo "$WORKING_DIR directory not found"
          ls -la $WORKING_DIR/ios || echo "ios directory not found"
          ls -la $WORKING_DIR/android || echo "android directory not found"

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}  # Proper variable expansion
          check-latest: true

      # Rest of your original workflow remains exactly the same
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: $FLUTTER_VERSION
          channel: 'stable'
          cache: true
          cache-key: flutter-${{ runner.os }}-stable-$FLUTTER_VERSION

      - name: Verify environment
        run: flutter doctor -v
        working-directory: $WORKING_DIR


      - name: Install dependencies
        run: |
          flutter pub get
          echo "Dependencies installed. Listing pubspec.lock:"
          cat pubspec.lock || echo "pubspec.lock not found"
        working-directory: $WORKING_DIR

      - name: Check for iOS support
        id: check_ios
        run: |
          if [ -d "ios" ]; then
            echo "IOS_SUPPORTED=true" >> $GITHUB_OUTPUT
            echo "iOS directory found"
          else
            echo "IOS_SUPPORTED=false" >> $GITHUB_OUTPUT
            echo "iOS directory not found"
          fi
        working-directory: $WORKING_DIR

      - name: Install iOS CocoaPods
        if: steps.check_ios.outputs.IOS_SUPPORTED == 'true'
        run: |
          cd ios
          pod install --repo-update
          echo "Pods installed. Listing Podfile.lock:"
          cat Podfile.lock || echo "Podfile.lock not found"
        working-directory: $WORKING_DIR

      - name: Run Flutter analysis
        run: flutter analyze
        working-directory: $WORKING_DIR

      - name: Run Flutter tests
        run: flutter test
        working-directory: $WORKING_DIR

      - name: Build Android APK
        run: |
          flutter build apk --release
          echo "APK build completed. Listing output directory:"
          ls -la build/app/outputs/flutter-apk/
        working-directory: $WORKING_DIR

      - name: Build iOS IPA
        if: steps.check_ios.outputs.IOS_SUPPORTED == 'true'
        run: |
          flutter build ipa --release --no-codesign
          echo "IPA build completed. Listing output directory:"
          ls -la build/ios/ipa/
        working-directory: $WORKING_DIR

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: aurore-apk
          path: $WORKING_DIR/build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: error

      - name: Upload IPA artifact
        if: steps.check_ios.outputs.IOS_SUPPORTED == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: aurore-ipa
          path: $WORKING_DIR/build/ios/ipa/*.ipa
          if-no-files-found: error
