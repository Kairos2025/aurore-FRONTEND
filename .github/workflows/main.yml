name: Flutter APK Builder (Version-Locked)

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  FLUTTER_VERSION: '3.19.5'  # Target version
  DART_VERSION: '3.9.5'      # Required Dart version
  FLUTTER_HOME: '/opt/flutter'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 35

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Precise Flutter Version
        run: |
          # Clean environment
          sudo rm -rf /usr/local/flutter
          sudo rm -rf /opt/hostedtoolcache/flutter
          
          # Clone specific Flutter version
          git clone https://github.com/flutter/flutter.git \
            -b ${{ env.FLUTTER_VERSION }} \
            --depth 1 \
            ${{ env.FLUTTER_HOME }}
          
          # Prevent automatic Dart SDK updates
          echo "disable-dart-sdk-update=true" >> ${{ env.FLUTTER_HOME }}/bin/internal/engine.version
          
          # Add to PATH
          echo "${{ env.FLUTTER_HOME }}/bin" >> $GITHUB_PATH
          echo "${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk/bin" >> $GITHUB_PATH

      - name: Force Dart SDK Version
        run: |
          # Manually set the Dart SDK version
          echo "Flutter ${{ env.FLUTTER_VERSION }} requires Dart ${{ env.DART_VERSION }}"
          /opt/flutter/bin/flutter --version --verify-version
          
          # Verify Dart version
          DART_ACTUAL=$(/opt/flutter/bin/dart --version 2>&1 | awk '{print $4}')
          if [ "$DART_ACTUAL" != "${{ env.DART_VERSION }}" ]; then
            echo "::error::Dart version mismatch! Actual: $DART_ACTUAL, Required: ${{ env.DART_VERSION }}"
            echo "Manually installing correct Dart SDK..."
            
            # Download correct Dart SDK
            DART_BUILD=$(grep 'engine.version' ${{ env.FLUTTER_HOME }}/bin/internal/engine.version | cut -d'=' -f2)
            wget https://storage.googleapis.com/flutter_infra_release/flutter/$DART_BUILD/dart-sdk-linux-x64.zip
            unzip -o dart-sdk-linux-x64.zip -d ${{ env.FLUTTER_HOME }}/bin/cache/
            rm dart-sdk-linux-x64.zip
            
            # Re-verify
            DART_ACTUAL=$(/opt/flutter/bin/dart --version 2>&1 | awk '{print $4}')
            if [ "$DART_ACTUAL" != "${{ env.DART_VERSION }}" ]; then
              echo "::error::Failed to install correct Dart SDK"
              exit 1
            fi
          fi

      - name: Setup Android Licenses
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          yes | /opt/flutter/bin/sdkmanager --licenses
          yes | /opt/flutter/bin/flutter doctor --android-licenses

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          /opt/flutter/bin/flutter pub get
          /opt/flutter/bin/flutter build apk --release --shrink

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
