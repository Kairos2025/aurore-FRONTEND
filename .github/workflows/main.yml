name: Flutter CI/CD with Verified Download

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  FLUTTER_VERSION: '3.22.4'  # Verified stable version with Dart 3.8.0+
  FLUTTER_HOME: '/home/runner/flutter'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Flutter (Verified URL)
        run: |
          # Clean and verify directory
          rm -rf ${{ env.FLUTTER_HOME }}
          mkdir -p ${{ env.FLUTTER_HOME }}

          # Official verified URL pattern
          FLUTTER_URL="https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${{ env.FLUTTER_VERSION }}-stable.tar.xz"

          # Download with validation
          if ! curl -L "$FLUTTER_URL" -o flutter.tar.xz; then
            echo "::error::Failed to download Flutter"
            exit 1
          fi

          # Verify file integrity
          if ! file flutter.tar.xz | grep -q 'XZ compressed data'; then
            echo "::error::Invalid file format detected"
            exit 1
          fi

          # Extract with progress
          tar -xJf flutter.tar.xz -C ${{ env.FLUTTER_HOME }} --strip-components=1
          echo "${{ env.FLUTTER_HOME }}/bin" >> $GITHUB_PATH

      - name: Validate Installation
        run: |
          flutter --version
          dart --version

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter pub get
          flutter build apk --release --no-sound-null-safety --shrink

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
