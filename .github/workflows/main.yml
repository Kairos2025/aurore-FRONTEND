name: Flutter Build APK

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-licenses: true
          android-sdk-platform: 34
          build-tools-version: 34.0.0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: 'stable'
          flutter-cache: true

      - name: Configure environment
        run: |
          # Set correct Flutter path
          FLUTTER_ROOT=$(dirname $(dirname $(which flutter)))
          echo "FLUTTER_HOME=$FLUTTER_ROOT" >> $GITHUB_ENV
          
          # Create essential config files
          echo "sdk.dir=$ANDROID_HOME" > android/local.properties
          echo "flutter.sdk=$FLUTTER_ROOT" >> android/local.properties
          echo "flutter.versionCode=1" >> android/local.properties
          echo "flutter.versionName=1.0.0" >> android/local.properties

      - name: Verify setup
        run: |
          flutter doctor -v
          ls -la "$FLUTTER_HOME/packages/flutter_tools/gradle"

      - name: Build with debug
        run: |
          set -ex  # Enable debug mode and exit on error
          flutter clean
          flutter pub get
          
          # First try normal build
          if ! flutter build apk --release --verbose; then
            echo "::warning::Standard build failed, trying with --no-shrink"
            flutter build apk --release --no-shrink --verbose
          fi

          # Verify APK exists in all possible locations
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "APK found at standard location"
          elif [ -f "build/app/outputs/apk/release/app-release.apk" ]; then
            echo "APK found at alternative location"
            mkdir -p build/app/outputs/flutter-apk/
            cp build/app/outputs/apk/release/app-release.apk build/app/outputs/flutter-apk/
          else
            echo "::error::APK not found in any standard location!"
            find . -name "*.apk" || echo "No APK files found"
            exit 1
          fi

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
          if-no-files-found: error
