name: Production APK Builder
on:
  push:
    branches: [main, master]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PROJECT_DIR: aurore_frontend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          path: ${{ env.PROJECT_DIR }}

      - name: Validate Structure
        run: |
          echo "Repository Structure:"
          ls -la ${{ env.PROJECT_DIR }}
          test -f ${{ env.PROJECT_DIR }}/pubspec.yaml || { 
            echo "❌ pubspec.yaml missing"; 
            exit 1; 
          }
          test -f ${{ env.PROJECT_DIR }}/lib/main.dart || { 
            echo "❌ main.dart missing"; 
            exit 1; 
          }

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: stable
          cache: true
          cache-key: flutter-deps-${{ hashFiles(format('{0}/pubspec.lock', env.PROJECT_DIR)) }}

      - name: Dependency Validation
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Flexible version checks
          if ! grep -qE 'sdk:[" ]*>=3\.7\.2 <4\.0\.0' pubspec.yaml; then
            echo "❌ Invalid SDK constraint - Required: '>=3.7.2 <4.0.0'"
            grep 'sdk:' pubspec.yaml
            exit 1
          fi
          
          if ! grep -qE 'lints:[" ]*5\.0\.0' pubspec.yaml; then
            echo "❌ lints must be exactly 5.0.0"
            grep 'lints:' pubspec.yaml
            exit 1
          fi

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter clean
          flutter pub get
          
          # Verify actual codebase
          if ! grep -q '// PRODUCTION-APP-ID' lib/main.dart; then
            echo "❌ Demo code detected! Add identifier to main.dart"
            exit 1
          fi
          
          flutter build apk --release --no-pub

          # APK content validation
          if unzip -p build/app/outputs/flutter-apk/app-release.apk | strings | grep -qi 'flutter demo'; then
            echo "❌ DEMO CODE FOUND IN APK!"
            exit 1
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-apk
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
