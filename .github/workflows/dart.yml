name: Robust APK Builder

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      FLUTTER_VERSION: '3.29.3'
      PACKAGE_NAME: 'com.auroreschool'
      PROJECT_DIR: 'aurore_frontend'
      GRADLE_VERSION: '8.10.2'
      AGP_VERSION: '8.4.0'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          path: source
          fetch-depth: 0

      - name: Setup Environment
        run: |
          sudo apt-get -y update
          sudo apt-get -y install rsync tree

      - name: Configure Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true

      - name: Install Android Tools
        uses: android-actions/setup-android@v3
        with:
          sdk-platform: '34'
          ndk-version: '27.0.12077973'
          cmake-version: '3.22.1'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: flutter-${{ runner.os }}-${{ env.FLUTTER_VERSION }}

      - name: Generate Project Base
        run: |
          rm -rf fresh_project
          flutter config --no-analytics
          flutter create \
            -t app \
            --org $PACKAGE_NAME \
            --platforms android \
            --project-name aurore_school \
            fresh_project

          # Immediate structure validation
          [ -d "fresh_project/android" ] || { echo "Android base missing!"; exit 1; }
          [ -f "fresh_project/android/app/build.gradle" ] || { echo "Critical Android file missing!"; exit 1; }

      - name: Merge Code Safely
        run: |
          rsync -avc --progress \
            --exclude='android/' \
            --exclude='build/' \
            --exclude='.dart_tool/' \
            --exclude='.git/' \
            --checksum \
            source/$PROJECT_DIR/ fresh_project/

          # Post-merge verification
          [ -f "fresh_project/pubspec.yaml" ] || { echo "Code merge failed!"; exit 1; }
          [ -f "fresh_project/android/app/build.gradle" ] || { echo "Android config corrupted!"; exit 1; }

      - name: Modernize Gradle
        working-directory: fresh_project
        run: |
          # Update Gradle wrapper with retries
          for i in {1..3}; do
            ./android/gradlew wrapper \
              --gradle-version $GRADLE_VERSION \
              --distribution-type all \
              -p android && break
            echo "Gradle update failed, retrying..."
            sleep 5
          done

          # AGP version update with backup
          sed -i.bak "s/id 'com.android.application' version '.*'/id 'com.android.application' version '$AGP_VERSION'/" android/app/build.gradle
          diff android/app/build.gradle android/app/build.gradle.bak || echo "AGP version updated"
          rm android/app/build.gradle.bak

          # NDK configuration
          echo "android.ndkVersion=27.0.12077973" >> android/gradle.properties

      - name: Build Release APK
        working-directory: fresh_project
        run: |
          flutter clean
          flutter pub get --verbose
          flutter build apk --release \
            --dart-define=CI_BUILD=true \
            --split-debug-info=build/debug-info \
            --obfuscate

      - name: Verify Artifacts
        run: |
          [ -f "fresh_project/build/app/outputs/flutter-apk/app-release.apk" ] || { echo "APK not generated!"; exit 1; }
          [ -d "fresh_project/build/debug-info" ] || { echo "Debug symbols missing!"; exit 1; }

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: school-apk
          path: |
            fresh_project/build/app/outputs/flutter-apk/app-release.apk
            fresh_project/build/debug-info
          retention-days: 7

      - name: Post-mortem Logs
        if: ${{ failure() }}
        run: |
          echo "=== Critical File Structure ==="
          tree fresh_project/android -L 3
          echo "\n=== Gradle Properties ==="
          cat fresh_project/android/gradle.properties || true
          echo "\n=== Build Logs ==="
          find fresh_project/build -name '*.log' -exec tail -n 50 {} \;
