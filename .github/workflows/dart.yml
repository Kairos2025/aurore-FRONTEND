name: Aurore School Production APK Builder

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 50
    env:
      REPO_DIR: 'aurore-FRONTEND'
      PROJECT_DIR: 'aurore_frontend'
      PACKAGE_NAME: 'com.auroreschool'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_DIR }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.5'
          cache: true

      - name: Accept Android licenses
        run: |
          yes | sdkmanager --licenses || true
          flutter doctor -v

      - name: Regenerate Android Project
        working-directory: ${{ env.REPO_DIR }}
        run: |
          for i in {1..3}; do
            flutter create -t app \
              --org $PACKAGE_NAME \
              --platforms android \
              --no-pub \
              temp_proj && break
            echo "Project creation failed, retrying..."
            sleep 5
          done

          # Verify Android structure exists before copying
          if [ ! -f "temp_proj/android/app/build.gradle" ]; then
            echo "Android project structure verification failed!"
            ls -la temp_proj/android/app
            exit 1
          fi

          mkdir -p android_backup
          cp -a temp_proj/android/app/build.gradle android_backup/
          cp -a temp_proj/android/gradle.properties android_backup/ 2>/dev/null || true

          rsync -av --ignore-existing \
            --exclude='android/' \
            --exclude='build/' \
            --exclude='.dart_tool/' \
            $PROJECT_DIR/ temp_proj/

          mkdir -p temp_proj/android/app
          cp -a android_backup/* temp_proj/android/

          rm -rf $PROJECT_DIR
          mv temp_proj $PROJECT_DIR
          rm -rf android_backup

          [ -f "$PROJECT_DIR/android/app/build.gradle" ] || { echo "Final Android config check failed!"; exit 1; }

      - name: Modernize Gradle
        working-directory: ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}/android
        run: |
          for i in {1..3}; do
            ./gradlew wrapper --gradle-version 8.10.2 --distribution-type all && break
            echo "Gradle update failed, retrying..."
            sleep 10
          done

          ./gradlew --version || exit 1
          cp app/build.gradle app/build.gradle.bak
          sed -i 's/com.android.application" version ".*"/com.android.application" version "8.4.0"/' app/build.gradle
          echo "android.ndkVersion=27.0.12077973" >> gradle.properties
          [ -n "$(grep 'ndkVersion' gradle.properties)" ] || exit 1

      - name: Build Production APK
        working-directory: ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}
        run: |
          flutter clean
          flutter pub get
          flutter build apk --release \
            --dart-define=APP_NAME="AURORE SCHOOL" \
            --split-debug-info=build/debug-info \
            --obfuscate \
            --verbose
          [ -f "build/app/outputs/flutter-apk/app-release.apk" ] || exit 1

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: school-apk
          path: |
            ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
            ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}/build/debug-info
        if: success() || failure()
