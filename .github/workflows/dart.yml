name: Build Aurore School APK

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      FLUTTER_CHANNEL: stable
      FLUTTER_VERSION: 3.29.3
      GRADLE_VERSION: 8.9
      AGP_VERSION: 8.4.0
      NDK_VERSION: 27.0.12077973
      JAVA_VERSION: '17'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout: |
            *
            !ios
            !windows
            !**/ios
            !**/windows
          sparse-checkout-cone-mode: false
          path: aurore_frontend

      - name: Validate Repository Structure
        run: |
          cd aurore_frontend
          [ -d "android" ] || { echo "Android directory missing!"; exit 1; }
          [ -f "pubspec.yaml" ] || { echo "pubspec.yaml missing!"; exit 1; }
          echo "Repository structure validated successfully"

      - name: Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          check-latest: true

      - name: Validate Java Version
        run: |
          java -version 2>&1 | grep -q "openjdk version \"$JAVA_VERSION" || (echo "Java version mismatch!" && exit 1)

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          sdk-platform: '34'
          cmake-version: '3.22.1'
          addon-licenses: |
            android-sdk-license
            android-sdk-preview-license

      - name: Accept Android Licenses
        run: flutter doctor --android-licenses --verbose

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        id: flutter
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
          cache-key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
          cache-path: ${{ github.workspace }}/.pub-cache

      - name: Verify Flutter Installation
        run: |
          echo "Flutter path: $(which flutter)"
          flutter --version
          flutter doctor -v

      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            aurore_app/android/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties') }}-v2

      - name: Prepare Project Structure
        run: |
          # Clean existing app directory
          rm -rf aurore_app
          
          # Create new project structure
          flutter create --platforms android --org com.auroreschool aurore_app
          
          # Merge existing Android config
          if [ -d "aurore_frontend/android" ]; then
            echo "Merging existing Android configuration"
            cp -a aurore_frontend/android/* aurore_app/android/
          fi
          
          # Sync project files
          rsync -av --delete \
            --exclude='android/' \
            --exclude='build/' \
            --exclude='.dart_tool/' \
            aurore_frontend/ aurore_app/

      - name: Validate Project Structure
        run: |
          cd aurore_app
          [ -d "android" ] || { echo "Android directory not found after sync!"; exit 1; }
          [ -f "pubspec.yaml" ] || { echo "pubspec.yaml missing after sync!"; exit 1; }
          echo "Project structure validated:"
          tree -L 2

      - name: Configure Build Environment
        working-directory: aurore_app
        run: |
          # Update Gradle wrapper with retry
          for i in {1..3}; do
            ./gradlew wrapper --gradle-version $GRADLE_VERSION --distribution-type all && break
            echo "Gradle wrapper update failed, retry $i/3..."
            sleep 5
          done
          
          # Configure NDK version
          echo "android.ndkVersion=$NDK_VERSION" >> android/gradle.properties
          
          # Validate build configuration
          ./gradlew --version
          [ -f "android/app/build.gradle" ] || [ -f "android/app/build.gradle.kts" ] || exit 1

      - name: Build Release APK
        working-directory: aurore_app
        run: |
          set -eo pipefail
          flutter clean
          flutter pub get
          flutter build apk --release --verbose \
            --dart-define=CI_BUILD=true \
            --split-debug-info=build/debug-info \
            --obfuscate
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
          GRADLE_OPTS: -Dorg.gradle.daemon=false

      - name: Archive Debug Symbols
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: debug-symbols
          path: aurore_app/build/debug-info
          retention-days: 30

      - name: Upload APK Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: school-apk
          path: aurore_app/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

      - name: Diagnostic Info (on failure)
        if: ${{ failure() }}
        run: |
          echo "### FAILURE DIAGNOSTICS ###"
          echo "--- Environment Variables ---"
          printenv
          echo "--- Flutter Doctor ---"
          flutter doctor -v || true
          echo "--- Gradle Properties ---"
          cat android/gradle.properties || true
          echo "--- Build Logs ---"
          find . -name '*.log' -exec tail -n 100 {} \; || true
