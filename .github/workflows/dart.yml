name: Build Aurore App

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.22.2'  # Updated to a stable, well-tested version
  JAVA_VERSION: '17'
  WORKING_DIR: 'aurore_frontend'

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup macOS environment
        run: |
          sudo softwareupdate --install-rosetta --agree-to-license
          brew install cocoapods
          pod setup

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          check-latest: true

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          architecture: x64  # Explicitly set architecture
          cache: true
          cache-key: flutter-${{ runner.os }}-${{ env.FLUTTER_VERSION }}

      - name: Verify environment
        run: |
          flutter doctor -v
          flutter --version
          which flutter
        working-directory: ${{ env.WORKING_DIR }}

      - name: Install dependencies
        run: |
          flutter pub get
          flutter pub upgrade
        working-directory: ${{ env.WORKING_DIR }}

      - name: Check for iOS support
        id: check_ios
        run: |
          if [ -d "ios" ]; then
            echo "IOS_SUPPORTED=true" >> $GITHUB_OUTPUT
            echo "iOS directory found"
          else
            echo "IOS_SUPPORTED=false" >> $GITHUB_OUTPUT
            echo "iOS directory not found"
          fi
        working-directory: ${{ env.WORKING_DIR }}

      - name: Install iOS CocoaPods
        if: steps.check_ios.outputs.IOS_SUPPORTED == 'true'
        run: |
          cd ios
          pod install --repo-update
          pod --version
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run Flutter analysis
        run: flutter analyze
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run Flutter tests
        run: flutter test
        working-directory: ${{ env.WORKING_DIR }}

      - name: Build Android APK
        run: |
          flutter build apk --release --verbose
          ls -la build/app/outputs/flutter-apk/
        working-directory: ${{ env.WORKING_DIR }}

      - name: Build iOS IPA
        if: steps.check_ios.outputs.IOS_SUPPORTED == 'true'
        run: |
          flutter build ipa --release --no-codesign --verbose
          ls -la build/ios/ipa/
        working-directory: ${{ env.WORKING_DIR }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: aurore-apk
          path: ${{ env.WORKING_DIR }}/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

      - name: Upload IPA artifact
        if: steps.check_ios.outputs.IOS_SUPPORTED == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: aurore-ipa
          path: ${{ env.WORKING_DIR }}/build/ios/ipa/*.ipa
          retention-days: 7
