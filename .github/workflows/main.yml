name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  # Using Flutter 3.33.0 which solves:
  # 1. SDK version conflicts (Dart 3.8.0+)
  # 2. Firebase package compatibility
  # 3. http vs flutter_svg conflicts
  FLUTTER_VERSION: '3.33.0'
  WORKING_DIR: './aurore_frontend'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Precise Flutter Version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: flutter-${{ env.FLUTTER_VERSION }}

      - name: Validate Environment
        run: |
          echo "=== Flutter Version ==="
          flutter --version
          echo "=== Dart Version ==="
          dart --version
          echo "=== Doctor ==="
          flutter doctor -v

      - name: Prepare Dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          # 1. Ensure valid package name format
          sed -i 's/name: .*/name: aurore_frontend/' pubspec.yaml
          
          # 2. Auto-adjust SDK version to match installed Flutter
          DART_VERSION=$(dart --version | awk '{print $4}')
          sed -i "s/sdk: \">=.*\"/sdk: \">=${DART_VERSION} <4.0.0\"/" pubspec.yaml
          
          # 3. Enforce compatible dependency versions
          sed -i \
            -e 's/async: .*/async: 2.12.0/' \
            -e 's/http: .*/http: ^1.0.0/' \
            -e 's/flutter_svg: .*/flutter_svg: ^2.1.0/' \
            -e 's/firebase_core: .*/firebase_core: ^4.3.0/' \
            -e 's/firebase_auth: .*/firebase_auth: ^6.3.0/' \
            -e 's/material_color_utilities: .*/material_color_utilities: ^0.12.0/' \
            pubspec.yaml

      - name: Resolve Dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs || true

      - name: Run Tests
        working-directory: ${{ env.WORKING_DIR }}
        run: flutter test

      - name: Build Release APK
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter clean
          flutter build apk --release \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: |
            ${{ env.WORKING_DIR }}/build/app/outputs/flutter-apk/app-release.apk
            ${{ env.WORKING_DIR }}/build/symbols/
          retention-days: 7
