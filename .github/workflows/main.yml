name: Flutter APK Builder (Absolute Version Enforcement)

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  FLUTTER_VERSION: '3.16.9'  # Contains Dart 3.8.6
  FLUTTER_HOME: '/home/runner/flutter_new'  # Different location to avoid cache

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Purge All Existing Flutter Installations
        run: |
          sudo rm -rf /usr/local/flutter
          sudo rm -rf /opt/hostedtoolcache/flutter
          sudo rm -rf $HOME/flutter
          sudo rm -rf $HOME/.flutter
          sudo rm -rf $HOME/.pub-cache

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Flutter from Official Archive
        run: |
          # Download specific version from official archive
          wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${{ env.FLUTTER_VERSION }}-stable.tar.xz
          tar xf flutter_linux_${{ env.FLUTTER_VERSION }}-stable.tar.xz
          mv flutter ${{ env.FLUTTER_HOME }}
          
          # Add to PATH
          echo "${{ env.FLUTTER_HOME }}/bin" >> $GITHUB_PATH
          echo "${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk/bin" >> $GITHUB_PATH

      - name: Force Version Verification
        run: |
          # Absolute path to avoid any PATH issues
          ${{ env.FLUTTER_HOME }}/bin/flutter --version
          ${{ env.FLUTTER_HOME }}/bin/dart --version
          
          # Strict version check
          DART_VERSION=$(${{ env.FLUTTER_HOME }}/bin/dart --version 2>&1 | awk '{print $4}')
          REQUIRED="3.8.0"
          if [ "$(printf '%s\n' "$REQUIRED" "$DART_VERSION" | sort -V | head -n1)" != "$REQUIRED" ]; then
            echo "::error::VERSION MISMATCH: Dart $DART_VERSION detected!"
            echo "This should be impossible with Flutter ${{ env.FLUTTER_VERSION }}"
            echo "Please report this to GitHub Actions support"
            exit 1
          fi

      - name: Accept Android Licenses
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          yes | ${{ env.FLUTTER_HOME }}/bin/sdkmanager --licenses
          yes | ${{ env.FLUTTER_HOME }}/bin/flutter doctor --android-licenses

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          ${{ env.FLUTTER_HOME }}/bin/flutter pub get
          ${{ env.FLUTTER_HOME }}/bin/flutter build apk \
            --release \
            --shrink \
            --target-platform android-arm,android-arm64

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
