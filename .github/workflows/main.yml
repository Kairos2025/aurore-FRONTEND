name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.22.0'  # Comes with Dart 3.4.0
  PROJECT_DIR: 'aurore_frontend'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Force SDK Compatibility
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Create a completely new pubspec.yaml with guaranteed compatible versions
          cat << 'EOF' > pubspec.yaml
          name: aurore_frontend
          description: Aurore School Application
          version: 1.0.0+1

          environment:
            sdk: ">=3.4.0 <4.0.0"  # Matches Flutter 3.22.0
            flutter: ">=3.22.0 <4.0.0"

          dependencies:
            flutter:
              sdk: flutter
            firebase_core: 2.24.0
            firebase_auth: 4.11.0
            test: 1.24.0
            material_color_utilities: 0.8.0
            # Add other dependencies here with exact versions

          dev_dependencies:
            flutter_test:
              sdk: flutter

          flutter:
            uses-material-design: true
          EOF

          # Merge with existing non-conflicting dependencies
          python3 << 'EOF'
          import yaml
          with open('pubspec.original.yaml', 'r') as f:
              original = yaml.safe_load(f)
          with open('pubspec.yaml', 'r') as f:
              new_spec = yaml.safe_load(f)
          
          # Preserve non-conflicting dependencies
          for dep in original.get('dependencies', {}):
              if dep not in ['flutter', 'firebase_core', 'firebase_auth', 'test', 'material_color_utilities']:
                  new_spec['dependencies'][dep] = original['dependencies'][dep]
          
          with open('pubspec.yaml', 'w') as f:
              yaml.dump(new_spec, f, sort_keys=False)
          EOF

          echo "Final pubspec.yaml:"
          cat pubspec.yaml

      - name: Resolve Dependencies
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter clean
          flutter pub get

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          set -e
          flutter build apk --release \
            --no-sound-null-safety \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
