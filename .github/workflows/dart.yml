name: Build Aurore School APK

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify repository structure
        run: |
          ls -la
          echo "Checking for aurore_frontend/lib directory..."
          if [ ! -d "aurore_frontend/lib" ]; then
            echo "::error::lib directory not found in aurore_frontend"
            exit 1
          fi

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android environment
        uses: android-actions/setup-android@v3
        with:
          ndk-version: '27.0.12077973'
          sdk-platform: '33'
          cmake-version: '3.22.1'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
          cache: true

      - name: Create fresh Flutter project
        run: |
          # Remove existing directory if it exists
          rm -rf aurore_frontend_new
          
          # Create new Flutter project
          flutter create --platforms android --org com.auroreschool aurore_frontend_new

      - name: Copy application files
        run: |
          # Copy from existing aurore_frontend to new project
          cp -r aurore_frontend/lib aurore_frontend_new/
          cp aurore_frontend/pubspec.yaml aurore_frontend_new/
          [ -d "aurore_frontend/assets" ] && cp -r aurore_frontend/assets aurore_frontend_new/
          [ -d "aurore_frontend/fonts" ] && cp -r aurore_frontend/fonts aurore_frontend_new/
          [ -d "aurore_frontend/test" ] && cp -r aurore_frontend/test aurore_frontend_new/

      - name: Configure Android project
        working-directory: aurore_frontend_new
        run: |
          # Set NDK version
          sed -i '/android {/a \        ndkVersion = "27.0.12077973"' android/app/build.gradle.kts
          
          # Update build.gradle with modern settings
          cat > android/build.gradle <<EOL
          buildscript {
              ext.kotlin_version = '1.9.0'
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath 'com.android.tools.build:gradle:8.1.4'
                  classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:\$kotlin_version"
                  classpath 'com.google.gms:google-services:4.4.0'
              }
          }

          allprojects {
              repositories {
                  google()
                  mavenCentral()
                  maven { url 'https://jitpack.io' }
              }
          }

          task clean(type: Delete) {
              delete rootProject.buildDir
          }
          EOL

      - name: Fix compilation issues
        working-directory: aurore_frontend_new
        run: |
          # Fix AuthProvider constructor
          if [ -f "lib/main.dart" ]; then
            sed -i 's/AuthProvider(dio, secureStorage, googleSignIn)/AuthProvider(dio, secureStorage)/' lib/main.dart
          fi
          
          # Ensure font files exist
          mkdir -p fonts
          touch fonts/Inter-{Regular,Medium,SemiBold,Bold}.ttf

      - name: Install dependencies
        working-directory: aurore_frontend_new
        run: |
          flutter pub get

      - name: Build APK with retries
        working-directory: aurore_frontend_new
        run: |
          set -o pipefail
          for i in {1..3}; do
            flutter build apk --release --verbose 2>&1 | tee build.log
            if [ ${PIPESTATUS[0]} -eq 0 ]; then
              exit 0
            fi
            echo "::warning::Build attempt $i failed, retrying..."
            sleep 5
          done
          echo "::error::Build failed after 3 attempts. Last 50 lines:"
          tail -n 50 build.log
          exit 1

      - name: Verify APK exists
        working-directory: aurore_frontend_new
        run: |
          if [ ! -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "::error::APK not found at expected path"
            exit 1
          fi
          echo "APK generated successfully (size: $(du -h build/app/outputs/flutter-apk/app-release.apk | cut -f1))"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: aurore-school-apk
          path: aurore_frontend_new/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: aurore_frontend_new/build.log
          retention-days: 1
