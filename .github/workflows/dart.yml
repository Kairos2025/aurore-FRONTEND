name: Combined Android & iOS Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
      skip-android:
        description: 'Skip Android build?'
        required: false
        default: 'false'
        type: boolean
      skip-ios:
        description: 'Skip iOS build?'
        required: false
        default: 'false'
        type: boolean

env:
  NDK_VERSION: '27.0.11718014'
  ANDROID_SDK_ROOT: '/usr/local/lib/android/sdk'

jobs:
  android:
    name: Android Build
    if: ${{ !inputs.skip-android || github.event_name != 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # JDK 17 setup
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # Node.js setup
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    # Setup Android
    - name: Set up Android SDK
      run: |
        yes | sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
        sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0" "ndk;$NDK_VERSION"
        echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/$NDK_VERSION" >> $GITHUB_ENV
    
    # Cache node_modules
    - uses: actions/cache@v3
      id: node-cache
      with:
        path: |
          ~/.npm
          node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    # Install dependencies - with fallback to npm install if package-lock.json is missing
    - name: Install dependencies
      run: |
        if [ -f "package-lock.json" ]; then
          npm ci
        else
          npm install
          # Ensure package-lock.json is generated for future runs
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add package-lock.json
          git commit -m "Generate package-lock.json" || echo "No changes to commit"
        fi
        cd android && ./gradlew dependencies
    
    # Rest of your Android build steps...
    - name: Build APK
      run: |
        cd android && ./gradlew assembleRelease \
          -PMYAPP_RELEASE_STORE_FILE=keystore.jks \
          -PMYAPP_RELEASE_KEY_ALIAS=${{ secrets.KEY_ALIAS }} \
          -PMYAPP_RELEASE_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }} \
          -PMYAPP_RELEASE_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-android
        path: android/app/build/outputs/apk/release/app-release.apk

  ios:
    name: iOS Build
    needs: android
    if: ${{ !inputs.skip-ios || github.event_name != 'workflow_dispatch' }}
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Node.js setup
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    # Cache for node_modules and CocoaPods
    - uses: actions/cache@v3
      id: node-cache
      with:
        path: |
          ~/.npm
          node_modules
          ios/Pods
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    # Install dependencies with same fallback logic
    - name: Install dependencies
      run: |
        if [ -f "package-lock.json" ]; then
          npm ci
        else
          npm install
          # Ensure package-lock.json is generated for future runs
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add package-lock.json
          git commit -m "Generate package-lock.json" || echo "No changes to commit"
        fi
        cd ios && pod install
    
    # Rest of your iOS build steps...
    - name: Build iOS app
      run: |
        cd ios && xcodebuild \
          -workspace Aurore.xcworkspace \
          -scheme Aurore \
          -configuration Release \
          -destination 'generic/platform=iOS' \
          -archivePath build/Aurore.xcarchive \
          clean archive
    
    - name: Export IPA
      run: |
        cd ios && xcodebuild \
          -exportArchive \
          -archivePath build/Aurore.xcarchive \
          -exportOptionsPlist ExportOptions.plist \
          -exportPath build \
          -allowProvisioningUpdates
    
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: app-release-ios
        path: ios/build/Aurore.ipa
