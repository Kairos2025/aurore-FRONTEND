name: AURORE School APK Builder

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 50
    env:
      REPO_DIR: 'aurore-FRONTEND'  # Exact repository name
      PROJECT_DIR: 'aurore_frontend'  # Case-sensitive project directory
      PACKAGE_NAME: 'com.auroreschool'
      GRADLE_VERSION: '8.10.2'
      AGP_VERSION: '8.4.0'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_DIR }}

      - name: Validate Structure
        run: |
          cd ${{ env.REPO_DIR }}
          [ -d "$PROJECT_DIR" ] || { echo "Project directory $PROJECT_DIR missing!"; exit 1; }
          [ -f "$PROJECT_DIR/pubspec.yaml" ] || { echo "pubspec.yaml not found!"; exit 1; }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android Tools
        uses: android-actions/setup-android@v3
        with:
          sdk-platform: '34'
          ndk-version: '27.0.12077973'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          cache: true

      - name: Modernize Gradle
        working-directory: ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}
        run: |
          # Verify Android directory exists
          [ -d "android" ] || { echo "Android directory missing!"; exit 1; }
          
          # Update Gradle wrapper with explicit path
          ./android/gradlew wrapper \
            --gradle-version $GRADLE_VERSION \
            --distribution-type all \
            -p android

          # Update AGP version in Kotlin DSL
          sed -i "s/id(\"com.android.application\") version \".*\"/id(\"com.android.application\") version \"$AGP_VERSION\"/" android/app/build.gradle.kts

          # Configure NDK version
          echo "android.ndkVersion=\"27.0.12077973\"" >> android/gradle.properties

      - name: Build APK
        working-directory: ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}
        run: |
          flutter clean
          flutter pub get
          flutter build apk --release \
            --dart-define=APP_NAME="AURORE SCHOOL" \
            --split-debug-info=build/debug-info

      - name: Verify Output
        run: |
          cd ${{ env.REPO_DIR }}/$PROJECT_DIR
          [ -f "build/app/outputs/flutter-apk/app-release.apk" ] || { echo "APK generation failed!"; exit 1; }

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: school-apk
          path: |
            ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
            ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}/build/debug-info
          retention-days: 7
