name: Aurore School Production APK Builder

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 50
    env:
      REPO_DIR: 'aurore-FRONTEND'
      PROJECT_DIR: 'aurore_frontend'
      PACKAGE_NAME: 'com.auroreschool'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.REPO_DIR }}
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          ndk-version: '27.0.12077973'

      - name: Configure Android Paths
        run: |
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/emulator" >> $GITHUB_PATH

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.22.2'
          cache: true
          cache-key: flutter-v3.22.2
          cache-path: ${{ env.REPO_DIR }}/.flutter

      - name: Accept Licenses
        run: |
          yes | sdkmanager --licenses || true
          flutter config --no-analytics
          flutter doctor -v

      - name: Validate Environment
        run: |
          which flutter
          flutter --version
          java --version
          adb --version

      - name: Regenerate Android Project
        working-directory: ${{ env.REPO_DIR }}
        run: |
          set -x  # Enable debug output
          for i in {1..3}; do
            echo "Attempt $i/3: Creating Flutter project..."
            flutter create -t app \
              --org $PACKAGE_NAME \
              --platforms android \
              --no-pub \
              temp_proj
            
            if [ -f "temp_proj/android/app/build.gradle" ]; then
              echo "Project created successfully"
              break
            else
              echo "Project creation failed, structure:"
              ls -la temp_proj/android/app
              rm -rf temp_proj
              sleep 5
            fi
          done

          if [ ! -f "temp_proj/android/app/build.gradle" ]; then
            echo "❌ Critical error: Android project structure incomplete"
            exit 1
          fi

          mkdir -p android_backup
          cp -v temp_proj/android/app/build.gradle android_backup/
          cp -v temp_proj/android/gradle.properties android_backup/ 2>/dev/null || true

          echo "Merging project files..."
          rsync -av --ignore-existing \
            --exclude='android/' \
            --exclude='build/' \
            --exclude='.dart_tool/' \
            $PROJECT_DIR/ temp_proj/

          echo "Restoring Android config..."
          mkdir -p temp_proj/android/app
          cp -vr android_backup/* temp_proj/android/

          echo "Finalizing project structure..."
          rm -rf $PROJECT_DIR
          mv temp_proj $PROJECT_DIR
          rm -rf android_backup

          echo "Verifying final structure..."
          [ -f "$PROJECT_DIR/android/app/build.gradle" ] || { echo "Final verification failed"; exit 1; }

      - name: Modernize Gradle
        working-directory: ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}/android
        run: |
          ./gradlew --stop
          for i in {1..3}; do
            ./gradlew wrapper --gradle-version 8.10.2 --distribution-type all && break
            echo "Gradle update failed attempt $i/3"
            sleep 10
          done
          ./gradlew --version
          sed -i.bak 's/com.android.application" version ".*"/com.android.application" version "8.4.0"/' app/build.gradle
          echo "android.ndkVersion=27.0.12077973" >> gradle.properties

      - name: Build APK
        working-directory: ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}
        run: |
          flutter pub upgrade
          flutter build apk --release \
            --dart-define=APP_NAME="AURORE SCHOOL" \
            --split-debug-info=build/debug-info \
            --obfuscate \
            --verbose
          ls -lh build/app/outputs/flutter-apk/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: school-apk
          path: |
            ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/*.apk
            ${{ env.REPO_DIR }}/${{ env.PROJECT_DIR }}/build/debug-info
          retention-days: 7
        if: always()
