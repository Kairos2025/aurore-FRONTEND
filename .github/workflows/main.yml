name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.22.0'
  PROJECT_DIR: 'aurore_frontend'  # Confirmed from your screenshots

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify Project Structure
        id: structure
        run: |
          echo "Repository contents:"
          ls -la
          echo "Project directory contents:"
          ls -la ${{ env.PROJECT_DIR }} || true
          
          # Check where pubspec.yaml exists
          if [ -f "${{ env.PROJECT_DIR }}/pubspec.yaml" ]; then
            echo "pubspec.yaml found in project directory"
          elif [ -f "pubspec.yaml" ]; then
            echo "pubspec.yaml found in root"
            echo "PROJECT_DIR=." >> $GITHUB_ENV
          else
            echo "::error::pubspec.yaml not found!"
            exit 1
          fi

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: 'flutter-${{ env.FLUTTER_VERSION }}'

      - name: Install yq
        run: |
          sudo apt-get update
          sudo apt-get install -y yq

      - name: Force Compatible Versions
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Verify pubspec.yaml exists
          if [ ! -f "pubspec.yaml" ]; then
            echo "::error::pubspec.yaml not found in ${{ env.PROJECT_DIR }}!"
            exit 1
          fi

          # Create backup
          cp pubspec.yaml pubspec.yaml.bak

          # Update dependencies using yq
          yq eval -i '
            del(.dependencies.test) |
            del(.dev_dependencies.test) |
            .dev_dependencies.flutter_test.sdk = "flutter" |
            .dependencies.firebase_core = "2.24.0" |
            .dependencies.firebase_auth = "4.11.0" |
            .environment.sdk = ">=3.4.0 <4.0.0" |
            .environment.flutter = ">=3.22.0 <4.0.0"
          ' pubspec.yaml

          echo "Updated dependencies:"
          cat pubspec.yaml | grep -E "flutter_test|firebase|sdk|flutter:"

      - name: Resolve Dependencies
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter clean
          flutter pub get

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          set -e
          flutter build apk --release \
            --no-sound-null-safety \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
