name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.22.0'  # Stable version with known compatibility
  WORKING_DIR: './aurore_frontend'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Install Flutter (Direct Method)
        run: |
          # Use GitHub's built-in tool cache instead of manual installation
          echo "Installing Flutter ${{ env.FLUTTER_VERSION }} via setup-flutter action"
          curl -s https://raw.githubusercontent.com/subsurface/subsurface/main/.github/workflows/flutter.yml | grep -A 5 "uses: subosito/flutter-action"
          # Fallback to manual installation if needed
          FLUTTER_HOME="$HOME/flutter"
          mkdir -p "$FLUTTER_HOME"
          wget -q https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${{ env.FLUTTER_VERSION }}-stable.tar.xz || echo "Download failed"
          tar xf flutter_linux_${{ env.FLUTTER_VERSION }}-stable.tar.xz -C "$FLUTTER_HOME" --strip-components=1 || echo "Extraction failed"
          echo "$FLUTTER_HOME/bin" >> $GITHUB_PATH
          echo "FLUTTER_HOME=$FLUTTER_HOME" >> $GITHUB_ENV

      - name: Verify Flutter Installation
        run: |
          echo "Checking Flutter installation..."
          which flutter || echo "Flutter not found in PATH"
          flutter --version || exit 1
          echo "FLUTTER_HOME: $FLUTTER_HOME"
          echo "PATH: $PATH"

      - name: Adjust SDK Constraints
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          sed -i \
            -e 's/sdk: ">=3.8.0 <4.0.0"/sdk: ">=3.4.0 <4.0.0"/' \
            -e 's/test: >=1.25.9/test: ^1.24.7/' \
            pubspec.yaml

      - name: Resolve Dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter pub get --verbose || flutter pub cache repair
          flutter pub get --verbose

      - name: Build APK
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter clean
          flutter build apk --release \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.WORKING_DIR }}/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
