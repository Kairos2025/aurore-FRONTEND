name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  WORKING_DIR: './aurore_frontend'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Flutter (Manual Installation)
        run: |
          # Install specific Flutter version manually
          FLUTTER_VERSION="3.36.0"
          wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz
          tar xf flutter_linux_${FLUTTER_VERSION}-stable.tar.xz
          echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
          flutter --version

      - name: Verify Installation
        run: |
          flutter --version
          dart --version
          if [[ ! $(flutter --version) =~ "3.36.0" ]]; then
            echo "::error::Incorrect Flutter version installed"
            exit 1
          fi

      - name: Prepare Dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          # Set known-working dependency versions
          sed -i \
            -e 's/firebase_core: .*/firebase_core: 4.3.0/' \
            -e 's/firebase_auth: .*/firebase_auth: 6.3.0/' \
            -e 's/firebase_analytics: .*/firebase_analytics: 11.4.5/' \
            -e 's/flutter_svg: .*/flutter_svg: 2.1.0/' \
            -e 's/http: .*/http: 1.1.0/' \
            -e 's/material_color_utilities: .*/material_color_utilities: 0.11.1/' \
            pubspec.yaml

          # Set exact SDK constraints
          sed -i \
            -e 's/sdk: ">=.*"/sdk: ">=3.8.0 <4.0.0"/' \
            -e 's/flutter: ">=.*"/flutter: ">=3.36.0"/' \
            pubspec.yaml

      - name: Resolve Dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter pub get --verbose || {
            echo "::warning::First attempt failed, retrying with clean cache..."
            flutter pub cache repair
            flutter pub get --verbose || {
              echo "::error::Dependency resolution failed"
              exit 1
            }
          }

      - name: Build APK
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter clean
          flutter build apk --release \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.WORKING_DIR }}/build/app/outputs/flutter-apk/app-release.apk
