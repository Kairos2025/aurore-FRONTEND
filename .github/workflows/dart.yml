name: CI - Build Aurore App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: macos-latest  # macOS for iOS builds; also supports Android

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java (fixing the distribution issue)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Specify distribution to fix the error
          java-version: '17'  # Use a modern Java version for Android builds

      # Step 3: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'  # Use a stable Flutter version
          channel: 'stable'

      # Step 4: Verify Flutter setup
      - name: Check Flutter version
        run: flutter --version

      # Step 5: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 6: Run Dart analysis with detailed output
      - name: Run Dart analysis
        run: |
          flutter analyze --no-fatal-infos > analysis_output.txt || echo "Dart analysis completed with issues. See analysis_output.txt for details."
        continue-on-error: true  # Allow the pipeline to continue even if analysis fails

      # Step 7: Upload analysis output as an artifact
      - name: Upload Dart analysis output
        uses: actions/upload-artifact@v3
        with:
          name: dart-analysis-output
          path: analysis_output.txt

      # Step 8: Run tests
      - name: Run tests
        run: flutter test
        continue-on-error: true  # Allow continuation if tests fail

      # Step 9: Build APK
      - name: Build APK
        run: flutter build apk --release

      # Step 10: Build IPA (for iOS)
      - name: Build IPA
        run: |
          flutter build ios --release --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          mv Runner.app Payload/
          zip -r app.ipa Payload

      # Step 11: Upload APK artifact
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

      # Step 12: Upload IPA artifact
      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: app.ipa
          path: build/ios/iphoneos/app.ipa
