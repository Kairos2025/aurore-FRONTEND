name: Build APK

on:
  push:
    branches:
      - update-gradle
  pull_request:
    branches:
      - update-gradle

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository with a specific path
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: aurore-FRONTEND

      # Set up Java (required for Android builds)
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Fetch the latest stable Flutter version
      - name: Fetch latest stable Flutter version
        run: |
          echo "Fetching the latest stable Flutter version..."
          git clone --depth 1 --branch stable https://github.com/flutter/flutter.git flutter_latest
          cd flutter_latest
          ./bin/flutter --version
          flutter_version=$(./bin/flutter --version --machine | grep -oP '"frameworkVersion": "\K[0-9]+\.[0-9]+\.[0-9]+')
          echo "Latest stable Flutter version: $flutter_version"
          echo "FLUTTER_VERSION=$flutter_version" >> $GITHUB_ENV
          cd ..
          rm -rf flutter_latest

      # Set up Flutter with the latest stable version
      - name: Set up Flutter
        uses: subosito/flutter-action@v2.8.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          architecture: 'x64'

      # Verify Flutter and Dart version
      - name: Verify Flutter setup
        run: |
          flutter doctor -v || { echo "Error: Flutter setup failed"; exit 1; }
          flutter --version || { echo "Error: Flutter not found"; exit 1; }
          dart --version || { echo "Error: Dart not found"; exit 1; }
          dart_version=$(dart --version 2>&1 | grep -oP '\d+\.\d+\.\d+')
          echo "Dart version: $dart_version"

      # Accept Android licenses
      - name: Accept Android licenses
        working-directory: ./aurore-FRONTEND/aurore_frontend
        run: |
          yes | flutter doctor --android-licenses || { echo "Error: Failed to accept Android licenses"; exit 1; }

      # Verify working directory and project root
      - name: Verify directory
        run: |
          pwd
          ls -la .
          if [ -d "./aurore-FRONTEND" ]; then
            echo "Found aurore-FRONTEND directory"
            cd ./aurore-FRONTEND
            ls -la .
            if [ -d "./aurore_frontend" ]; then
              echo "Found aurore_frontend directory"
              cd ./aurore_frontend
              ls -la .
              if [ -f "pubspec.yaml" ]; then
                echo "Found pubspec.yaml in aurore_frontend"
              else
                echo "Error: pubspec.yaml not found in aurore_frontend"; exit 1
              fi
            else
              echo "Error: aurore_frontend directory not found"; exit 1
            fi
          else
            echo "Error: aurore-FRONTEND directory not found"; exit 1
          fi

      # Get Flutter dependencies
      - name: Install dependencies
        working-directory: ./aurore-FRONTEND/aurore_frontend
        run: |
          flutter pub get || { echo "Error: Failed to get dependencies"; echo "pubspec.yaml content:"; cat pubspec.yaml; exit 1; }

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          sdk-level: '33'
          ndk-version: '25.1.8937393'

      # Build the APK
      - name: Build APK
        working-directory: ./aurore-FRONTEND/aurore_frontend
        run: |
          flutter build apk --release || { echo "Error: APK build failed"; exit 1; }
          ls -la build/app/outputs/flutter-apk/ || { echo "Error: APK output directory not found"; exit 1; }
          if [ ! -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "Error: app-release.apk not generated"; exit 1
          fi

      # Upload the APK as an artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: aurore-FRONTEND/aurore-FRONTEND/aurore_frontend/build/app/outputs/flutter-apk/app-release.apk
