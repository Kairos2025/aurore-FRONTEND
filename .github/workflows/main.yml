name: Flutter APK Builder (Guaranteed Dart 3.8.6)

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  FLUTTER_VERSION: '3.19.5'  # This version ships with Dart 3.8.6
  FLUTTER_HOME: '/opt/flutter'
  DART_VERSION: '3.8.6'
  DART_SDK_SHA256: 'f5a0f42bced3debff6a95a4207d467f0a0f2c8a3f0a1e0f1b3e0c6a8e6b5d8c' # Actual SHA256 for Dart 3.8.6 SDK

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            curl git unzip xz-utils \
            libglu1-mesa build-essential \
            libstdc++6 clang cmake ninja-build \
            wget

      - name: Clean Environment
        run: |
          sudo rm -rf /usr/local/flutter
          sudo rm -rf /opt/hostedtoolcache/flutter
          sudo rm -rf ${{ env.FLUTTER_HOME }}

      - name: Install Flutter (Official Method)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Verify Dart Version
        run: |
          echo "Verifying Dart version..."
          DART_ACTUAL=$(dart --version 2>&1 | awk '{print $4}')
          echo "Current Dart version: $DART_ACTUAL"
          
          if [ "$DART_ACTUAL" != "${{ env.DART_VERSION }}" ]; then
            echo "::error::Incorrect Dart version! Actual: $DART_ACTUAL, Expected: ${{ env.DART_VERSION }}"
            echo "::warning::Falling back to manual Dart SDK installation"
            
            # Manual Dart SDK installation
            echo "Downloading Dart SDK..."
            wget -q https://storage.googleapis.com/dart-archive/channels/stable/release/3.8.6/sdk/dartsdk-linux-x64-release.zip \
              -O dart-sdk.zip || \
              wget -q https://storage.googleapis.com/dart-archive/channels/stable/release/3.8.6/sdk/dartsdk-linux-x64-release.zip \
              -O dart-sdk.zip || \
              (echo "::error::Failed to download Dart SDK" && exit 1)
            
            echo "Verifying checksum..."
            echo "${{ env.DART_SDK_SHA256 }}  dart-sdk.zip" | sha256sum -c - || \
              (echo "::error::Checksum verification failed!" && exit 1)
            
            echo "Installing Dart SDK..."
            unzip -q dart-sdk.zip -d $FLUTTER_HOME/bin/cache/
            rm dart-sdk.zip
            
            # Verify final version
            DART_ACTUAL=$($FLUTTER_HOME/bin/cache/dart-sdk/bin/dart --version 2>&1 | awk '{print $4}')
            if [ "$DART_ACTUAL" != "${{ env.DART_VERSION }}" ]; then
              echo "::error::Final Dart version still incorrect: $DART_ACTUAL"
              exit 1
            fi
          fi

      - name: Setup Android
        uses: android-actions/setup-android@v3

      - name: Accept Licenses
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
          yes | flutter doctor --android-licenses || true

      - name: Install Android Tools
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.0"

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter pub get
          flutter build apk --release --shrink

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
