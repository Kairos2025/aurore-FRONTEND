name: Build Aurore School APK

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android environment
        uses: android-actions/setup-android@v3
        with:
          ndk-version: '27.0.12077973'
          sdk-platform: '33'
          cmake-version: '3.22.1'
          gradle-version: '8.10.2'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
          cache: true

      - name: Configure Gradle properties
        run: |
          mkdir -p ~/.gradle
          cat > ~/.gradle/gradle.properties <<EOL
          org.gradle.caching=true
          org.gradle.parallel=true
          org.gradle.daemon=true
          android.useAndroidX=true
          android.enableJetifier=true
          org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8
          EOL

      - name: Clean and prepare project
        working-directory: aurore_frontend
        run: |
          flutter clean
          rm -rf .dart_tool .packages pubspec.lock
          rm -rf android/.gradle android/build

      - name: Recreate Android project with modern config
        working-directory: aurore_frontend
        run: |
          # Backup essential files
          mkdir -p ../temp_backup
          cp -r lib pubspec.yaml ../temp_backup/
          [ -d "assets" ] && cp -r assets ../temp_backup/
          [ -d "fonts" ] && cp -r fonts ../temp_backup/
          
          # Recreate Android project
          cd ..
          rm -rf aurore_frontend/android
          flutter create --platforms android --org com.auroreschool aurore_frontend
          cd aurore_frontend
          
          # Restore files
          rm -rf lib
          cp -r ../temp_backup/lib .
          cp ../temp_backup/pubspec.yaml .
          [ -d "../temp_backup/assets" ] && cp -r ../temp_backup/assets .
          [ -d "../temp_backup/fonts" ] && cp -r ../temp_backup/fonts .
          rm -rf ../temp_backup

          # Update build.gradle.kts with modern settings
          cat > android/app/build.gradle.kts <<EOL
          plugins {
              id("com.android.application")
              id("org.jetbrains.kotlin.android")
          }

          android {
              namespace = "com.auroreschool"
              compileSdk = 33
              ndkVersion = "27.0.12077973"

              defaultConfig {
                  applicationId = "com.auroreschool"
                  minSdk = 21
                  targetSdk = 33
                  versionCode = 1
                  versionName = "1.0.0"
              }

              buildTypes {
                  release {
                      isMinifyEnabled = true
                      proguardFiles(
                          getDefaultProguardFile("proguard-android-optimize.txt"),
                          "proguard-rules.pro"
                      )
                  }
              }

              compileOptions {
                  sourceCompatibility = JavaVersion.VERSION_17
                  targetCompatibility = JavaVersion.VERSION_17
              }
              kotlinOptions {
                  jvmTarget = "17"
              }
          }

          dependencies {
              implementation("androidx.core:core-ktx:1.12.0")
              implementation("androidx.appcompat:appcompat:1.6.1")
          }
          EOL

      - name: Fix compilation issues
        working-directory: aurore_frontend
        run: |
          # Fix AuthProvider constructor
          sed -i 's/AuthProvider(dio, secureStorage, googleSignIn)/AuthProvider(dio, secureStorage)/' lib/main.dart
          
          # Ensure font files exist
          mkdir -p fonts
          touch fonts/Inter-{Regular,Medium,SemiBold,Bold}.ttf

      - name: Install dependencies
        working-directory: aurore_frontend
        run: |
          flutter pub get

      - name: Build APK with retry
        working-directory: aurore_frontend
        run: |
          set -o pipefail
          for i in {1..3}; do
            flutter build apk --release --verbose 2>&1 | tee build.log
            if [ ${PIPESTATUS[0]} -eq 0 ]; then
              exit 0
            fi
            echo "::warning::Build attempt $i failed, retrying..."
            sleep 5
          done
          echo "::error::Build failed after 3 attempts. Last 50 lines:"
          tail -n 50 build.log
          exit 1

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: aurore-school-apk
          path: aurore_frontend/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: aurore_frontend/build.log
          retention-days: 1
