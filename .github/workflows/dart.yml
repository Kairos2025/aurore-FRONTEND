name: Build Aurore School APK

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify project structure
        working-directory: aurore_frontend
        run: |
          echo "Project contents:"
          ls -la
          
          # Create essential directories if missing
          mkdir -p android/app
          mkdir -p fonts

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android environment
        uses: android-actions/setup-android@v3
        with:
          ndk-version: '27.0.12077973'
          sdk-platform: '33'
          cmake-version: '3.22.1'

      - name: Set up Flutter
        uses: flutter-actions/setup-flutter@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
          cache: true

      - name: Create complete Android project files
        working-directory: aurore_frontend
        run: |
          # Create build.gradle.kts if missing
          if [ ! -f "android/app/build.gradle.kts" ]; then
            cat <<EOT > android/app/build.gradle.kts
            plugins {
                id("com.android.application")
                id("org.jetbrains.kotlin.android")
                id("com.google.gms.google-services")
            }

            android {
                namespace = "com.auroreschool"
                compileSdk = 33
                ndkVersion = "27.0.12077973"

                defaultConfig {
                    applicationId = "com.auroreschool"
                    minSdk = 21
                    targetSdk = 33
                    versionCode = 1
                    versionName = "1.0.0"
                }

                buildTypes {
                    release {
                        isMinifyEnabled = true
                        proguardFiles(
                            getDefaultProguardFile("proguard-android-optimize.txt"),
                            "proguard-rules.pro"
                        )
                    }
                }
            }

            dependencies {
                implementation(platform("com.google.firebase:firebase-bom:32.7.0"))
            }
            EOT
          fi

          # Create root build.gradle if missing
          if [ ! -f "android/build.gradle" ]; then
            cat <<EOT > android/build.gradle
            buildscript {
                ext.kotlin_version = '1.9.0'
                repositories {
                    google()
                    mavenCentral()
                }
                dependencies {
                    classpath 'com.android.tools.build:gradle:8.1.4'
                    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:\$kotlin_version"
                    classpath 'com.google.gms:google-services:4.4.0'
                }
            }

            allprojects {
                repositories {
                    google()
                    mavenCentral()
                    maven { url 'https://jitpack.io' }
                }
            }

            task clean(type: Delete) {
                delete rootProject.buildDir
            }
            EOT
          fi

      - name: Verify and fix font assets
        working-directory: aurore_frontend
        run: |
          # Create default font files if missing
          declare -A fonts=(
            ["Inter-Regular.ttf"]="regular"
            ["Inter-Medium.ttf"]="500"
            ["Inter-SemiBold.ttf"]="600"
            ["Inter-Bold.ttf"]="700"
          )

          for font in "${!fonts[@]}"; do
            if [ ! -f "fonts/$font" ]; then
              echo "Creating placeholder font: fonts/$font"
              touch "fonts/$font"
            fi
          done

          # Update pubspec.yaml fonts section
          if ! grep -q "fonts:" pubspec.yaml; then
            echo "Adding fonts section to pubspec.yaml"
            echo "flutter:" >> pubspec.yaml
            echo "  fonts:" >> pubspec.yaml
            echo "    - family: Inter" >> pubspec.yaml
            echo "      fonts:" >> pubspec.yaml
            for font in "${!fonts[@]}"; do
              echo "        - asset: fonts/$font" >> pubspec.yaml
              echo "          weight: ${fonts[$font]}" >> pubspec.yaml
            done
          fi

      - name: Install dependencies
        working-directory: aurore_frontend
        run: |
          flutter pub get

      - name: Build APK
        working-directory: aurore_frontend
        run: |
          flutter build apk --release --no-sound-null-safety

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: aurore-school-apk
          path: aurore_frontend/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
