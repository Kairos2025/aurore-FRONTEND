name: Flutter Build Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      build-type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
        - debug
        - release
        - profile

env:
  # Using Flutter 3.25.0-8.3.pre (beta) which includes Dart 3.5.0+
  FLUTTER_VERSION: '3.25.0-8.3.pre'
  PROJECT_DIR: 'aurore_frontend'

jobs:
  setup:
    name: Verify Environment
    runs-on: ubuntu-latest
    outputs:
      valid: ${{ steps.verify.outputs.valid }}
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Verify project structure
      id: verify
      run: |
        echo "Repository contents:"
        ls -la
        
        if [ ! -f "$PROJECT_DIR/pubspec.yaml" ]; then
          echo "::error::pubspec.yaml is missing in $PROJECT_DIR!"
          echo "valid=false" >> $GITHUB_OUTPUT
          exit 1
        fi
        
        echo "valid=true" >> $GITHUB_OUTPUT

  android:
    name: Android Build
    needs: setup
    if: ${{ needs.setup.outputs.valid == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Install Flutter from GitHub Releases
      uses: actions/flutter-tool-installer@v1
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'beta'
      
    - name: Verify Flutter Installation
      run: |
        echo "=== FLUTTER VERSION ==="
        flutter --version
        echo "=== DART VERSION ==="
        dart --version
        
        # Verify Dart version meets requirement
        DART_VERSION=$(dart --version 2>&1 | awk '{print $4}')
        REQUIRED_VERSION="3.5.0"
        
        if [ "$(printf '%s\n' "$REQUIRED_VERSION" "$DART_VERSION" | sort -V | head -n1)" != "$REQUIRED_VERSION" ]; then
          echo "::error::Dart version $DART_VERSION is lower than required $REQUIRED_VERSION"
          exit 1
        fi
        
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Install Dependencies
      working-directory: ${{ env.PROJECT_DIR }}
      run: |
        flutter pub get
        
    - name: Build Android APK
      working-directory: ${{ env.PROJECT_DIR }}
      run: |
        flutter build apk --${{ inputs.build-type }} \
          --dart-define=APP_ENV=${{ inputs.build-type }} \
          --release
          
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-${{ inputs.build-type }}
        path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-${{ inputs.build-type }}.apk

  ios:
    name: iOS Build
    needs: setup
    if: ${{ needs.setup.outputs.valid == 'true' }}
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Install Flutter from GitHub Releases
      uses: actions/flutter-tool-installer@v1
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'beta'
      
    - name: Verify Flutter Installation
      run: |
        echo "=== FLUTTER VERSION ==="
        flutter --version
        echo "=== DART VERSION ==="
        dart --version
        
        # Verify Dart version meets requirement
        DART_VERSION=$(dart --version 2>&1 | awk '{print $4}')
        REQUIRED_VERSION="3.5.0"
        
        if [ "$(printf '%s\n' "$REQUIRED_VERSION" "$DART_VERSION" | sort -V | head -n1)" != "$REQUIRED_VERSION" ]; then
          echo "::error::Dart version $DART_VERSION is lower than required $REQUIRED_VERSION"
          exit 1
        fi
        
    - name: Install Dependencies
      working-directory: ${{ env.PROJECT_DIR }}
      run: |
        flutter pub get
        cd ios && pod install
        
    - name: Build iOS IPA
      working-directory: ${{ env.PROJECT_DIR }}
      run: |
        flutter build ipa --${{ inputs.build-type }} \
          --dart-define=APP_ENV=${{ inputs.build-type }} \
          --release \
          --no-codesign
          
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: ios-${{ inputs.build-type }}
        path: ${{ env.PROJECT_DIR }}/build/ios/ipa/*.ipa
