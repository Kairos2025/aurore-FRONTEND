name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.25.0'  # Contains Dart 3.8.0+
  WORKING_DIR: './aurore_frontend'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Install Flutter
        run: |
          # Set installation path in home directory instead
          FLUTTER_HOME="$HOME/flutter"
          echo "FLUTTER_HOME=$FLUTTER_HOME" >> $GITHUB_ENV
          
          # Create directory and set permissions
          mkdir -p "$FLUTTER_HOME"
          chmod 755 "$FLUTTER_HOME"
          
          # Download and extract Flutter
          wget -q https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${{ env.FLUTTER_VERSION }}-stable.tar.xz
          tar xf flutter_linux_${{ env.FLUTTER_VERSION }}-stable.tar.xz -C "$FLUTTER_HOME" --strip-components=1
          
          # Add to PATH
          echo "$FLUTTER_HOME/bin" >> $GITHUB_PATH
          echo "PATH=$FLUTTER_HOME/bin:$PATH" >> $GITHUB_ENV

      - name: Verify Installation
        run: |
          echo "Flutter path: $FLUTTER_HOME"
          ls -la "$FLUTTER_HOME/bin"
          flutter --version
          dart --version

      - name: Build APK
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter pub get
          flutter clean
          flutter build apk --release \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.WORKING_DIR }}/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
