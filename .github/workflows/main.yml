name: Flutter APK Builder (Enforced Dart 3.8.0+)

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  # Using exact Flutter version that contains Dart 3.8.0+
  FLUTTER_VERSION: '3.16.9'  # Contains Dart 3.8.6
  FLUTTER_HOME: '/home/runner/flutter'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Force Install Correct Flutter Version
        run: |
          # Completely clean install
          sudo rm -rf ${{ env.FLUTTER_HOME }}
          sudo rm -rf /usr/local/flutter
          
          # Install specific version
          git clone https://github.com/flutter/flutter.git \
            -b ${{ env.FLUTTER_VERSION }} \
            --depth 1 \
            ${{ env.FLUTTER_HOME }}
          
          # Add to system PATH
          echo "${{ env.FLUTTER_HOME }}/bin" >> $GITHUB_PATH
          echo "${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
          echo "FLUTTER_ROOT=${{ env.FLUTTER_HOME }}" >> $GITHUB_ENV

      - name: Verify Installation
        run: |
          # Force PATH update
          export PATH="${{ env.FLUTTER_HOME }}/bin:$PATH"
          
          echo "=== Version Verification ==="
          flutter --version
          dart --version
          
          # Strict version check
          DART_VERSION=$(dart --version 2>&1 | awk '{print $4}')
          REQUIRED="3.8.0"
          if [ "$(printf '%s\n' "$REQUIRED" "$DART_VERSION" | sort -V | head -n1)" != "$REQUIRED" ]; then
            echo "::error::CRITICAL: Wrong Dart version $DART_VERSION"
            echo "Flutter ${{ env.FLUTTER_VERSION }} should provide Dart â‰¥3.8.0"
            echo "Forcing version check failure..."
            exit 1
          fi

      - name: Accept Android Licenses
        run: |
          yes | sdkmanager --licenses
          yes | flutter doctor --android-licenses

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter pub get
          flutter build apk \
            --release \
            --shrink \
            --target-platform android-arm,android-arm64

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
