name: Build Aurore School APK

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android NDK
        uses: android-actions/setup-android@v3
        with:
          ndk-version: '27.0.12077973'
          sdk-platform: '33'

      - name: Set up Flutter
        uses: flutter-actions/setup-flutter@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'
          cache: true

      - name: Recreate Android project structure
        working-directory: aurore_frontend
        run: |
          # Create temporary backup of all Flutter files
          echo "Creating backup of Flutter files..."
          mkdir -p ../flutter_backup
          cp -r lib ../flutter_backup/
          cp pubspec.yaml ../flutter_backup/
          [ -d "assets" ] && cp -r assets ../flutter_backup/
          [ -d "test" ] && cp -r test ../flutter_backup/
          [ -d "fonts" ] && cp -r fonts ../flutter_backup/

          # Completely recreate the Android project
          echo "Recreating Android project..."
          cd ..
          rm -rf aurore_frontend/android
          flutter create --platforms android --org com.auroreschool aurore_frontend
          cd aurore_frontend

          # Restore Flutter files
          echo "Restoring Flutter files..."
          rm -rf lib
          cp -r ../flutter_backup/lib .
          cp ../flutter_backup/pubspec.yaml .
          [ -d "../flutter_backup/assets" ] && cp -r ../flutter_backup/assets .
          [ -d "../flutter_backup/test" ] && cp -r ../flutter_backup/test .
          [ -d "../flutter_backup/fonts" ] && cp -r ../flutter_backup/fonts .

          # Clean up
          rm -rf ../flutter_backup

          # Set NDK version
          echo "Setting NDK version..."
          sed -i '/android {/a \        ndkVersion = "27.0.12077973"' android/app/build.gradle.kts

      - name: Install dependencies
        working-directory: aurore_frontend
        run: |
          flutter pub get

      - name: Build APK
        working-directory: aurore_frontend
        run: |
          flutter build apk --release

      - name: Verify APK
        working-directory: aurore_frontend
        run: |
          if [ ! -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            echo "::error::APK not generated"
            exit 1
          fi
          echo "APK generated successfully (size: $(du -h build/app/outputs/flutter-apk/app-release.apk | cut -f1))"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: aurore-school-apk
          path: aurore_frontend/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
