name: Build Aurore School APK

on:
  push:
    branches: [update-gradle]
  pull_request:
    branches: [update-gradle]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      FLUTTER_VERSION: '3.29.3'
      PROJECT_DIR: 'aurore_frontend'  # Must match case exactly
      PACKAGE_NAME: 'com.auroreschool'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          path: source

      - name: Verify Directory Structure
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          ls -la source/
          [ -d "source/$PROJECT_DIR" ] || mkdir -p "source/$PROJECT_DIR"

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          sdk-platform: '34'
          ndk-version: '27.0.12077973'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Regenerate Project
        run: |
          # Create temporary project
          flutter create -t app --org $PACKAGE_NAME tmp_proj
          
          # Merge existing code
          rsync -av --delete \
            --exclude='android/' \
            --exclude='build/' \
            --exclude='.dart_tool/' \
            source/$PROJECT_DIR/ tmp_proj/

          # Preserve custom Android config
          if [ -d "source/$PROJECT_DIR/android" ]; then
            cp -a source/$PROJECT_DIR/android tmp_proj/
          fi

          # Replace old project
          rm -rf source/$PROJECT_DIR
          mv tmp_proj source/$PROJECT_DIR

      - name: Build APK
        working-directory: ${{ github.workspace }}/source/${{ env.PROJECT_DIR }}
        run: |
          flutter clean
          flutter pub get
          flutter build apk --release \
            --dart-define=APP_NAME="AURORE SCHOOL"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: school-apk
          path: ${{ github.workspace }}/source/${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
