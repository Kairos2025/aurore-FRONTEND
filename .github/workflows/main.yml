name: Flutter CI/CD with Absolute Path Safety

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  FLUTTER_VERSION: '3.30.0'  # Contains Dart 3.8.0+
  FLUTTER_HOME: '/home/runner/flutter'  # Absolute path

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Install Flutter (Absolute Path)
        run: |
          # Clean previous installations
          rm -rf ${{ env.FLUTTER_HOME }}
          
          # Download from primary source
          FLUTTER_URL="https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${{ env.FLUTTER_VERSION }}-stable.tar.xz"
          
          echo "Downloading Flutter from: $FLUTTER_URL"
          curl -L $FLUTTER_URL | tar -xJ -C /home/runner
          
          # Verify extraction
          if [ ! -d "${{ env.FLUTTER_HOME }}/bin" ]; then
            echo "::error::Flutter not extracted correctly"
            exit 1
          fi
          
          # Add to PATH permanently
          echo "${{ env.FLUTTER_HOME }}/bin" >> $GITHUB_PATH
          echo "FLUTTER_ROOT=${{ env.FLUTTER_HOME }}" >> $GITHUB_ENV

      - name: Validate Installation
        run: |
          # Verify flutter command
          if ! command -v flutter >/dev/null; then
            echo "::error::Flutter not in PATH"
            echo "Current PATH: $PATH"
            exit 1
          fi
          
          # Verify dart version
          DART_VERSION=$(dart --version 2>&1 | awk '/Dart SDK version:/ {print $4}')
          REQUIRED="3.8.0"
          
          if [ "$(printf '%s\n' "$REQUIRED" "$DART_VERSION" | sort -V | head -n1)" != "$REQUIRED" ]; then
            echo "::error::Dart $DART_VERSION < $REQUIRED"
            exit 1
          fi

      - name: Configure Android
        run: |
          mkdir -p ~/.android
          echo -e "8933bad161af4178b1185d1a37fbf41ea5269c55\nd56f5187479451eabf01fb78af6dfcb131a6481e" > ~/.android/licenses.properties

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          flutter pub get
          flutter build apk --release --no-sound-null-safety --shrink

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
