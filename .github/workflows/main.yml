name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.22.0'  # Comes with Dart 3.4.0
  PROJECT_DIR: 'aurore_frontend'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Force Compatible Configurations
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Install yq for reliable YAML editing
          sudo apt-get update && sudo apt-get install -y yq

          # Create backup
          cp pubspec.yaml pubspec.yaml.bak

          # Set EXACT compatible versions for ALL critical dependencies
          yq eval '
            .environment.sdk = ">=3.4.0 <4.0.0" |       # Match Flutter 3.22.0
            .environment.flutter = ">=3.22.0 <4.0.0" |
            .dependencies.firebase_core = "2.24.0" |
            .dependencies.firebase_auth = "4.11.0" |
            .dependencies.material_color_utilities = "0.8.0" |
            del(.dependencies.test) |                     # Remove test package
            .dev_dependencies.flutter_test.sdk = "flutter"
          ' pubspec.yaml > temp.yaml && mv temp.yaml pubspec.yaml

          echo "Final dependency configuration:"
          cat pubspec.yaml | grep -E "sdk|flutter:|firebase|material_color_utilities|flutter_test"

      - name: Resolve Dependencies
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Clean environment and force dependency resolution
          rm -f pubspec.lock
          flutter clean
          flutter pub get --verbose

      - name: Verify Dependency Tree
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          echo "Dependency versions:"
          flutter pub deps | grep -E 'flutter|firebase|material|test'
          if flutter pub deps | grep -q 'material_color_utilities: 0.8.0'; then
            echo "âœ“ All versions compatible"
          else
            echo "::error::Version conflict detected!"
            exit 1
          fi

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          set -e
          flutter build apk --release \
            --no-sound-null-safety \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
