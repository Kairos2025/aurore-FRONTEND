name: Flutter APK Builder (Manual Dart SDK)

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  PROJECT_DIR: 'aurore_frontend'
  FLUTTER_VERSION: '3.16.9'
  DART_VERSION: '3.8.6'  # Explicit version requirement
  FLUTTER_HOME: '/opt/flutter'
  DART_SDK_URL: 'https://storage.googleapis.com/dart-archive/channels/stable/release/3.8.6/sdk/dartsdk-linux-x64-release.zip'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install Base Flutter
        run: |
          # Clean environment
          sudo rm -rf /usr/local/flutter
          sudo rm -rf /opt/hostedtoolcache/flutter
          
          # Clone Flutter
          git clone https://github.com/flutter/flutter.git -b ${{ env.FLUTTER_VERSION }} --depth 1 ${{ env.FLUTTER_HOME }}
          
          # Add to PATH
          echo "${{ env.FLUTTER_HOME }}/bin" >> $GITHUB_PATH

      - name: Install Correct Dart SDK
        run: |
          # Remove existing Dart SDK
          sudo rm -rf ${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk
          
          # Download Dart SDK with retry logic
          for i in {1..3}; do
            wget ${{ env.DART_SDK_URL }} -O dart-sdk.zip && break || sleep 30
          done
          
          # Install Dart SDK
          unzip dart-sdk.zip -d ${{ env.FLUTTER_HOME }}/bin/cache/
          mv ${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk* ${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk
          rm dart-sdk.zip
          
          # Verify installation
          ${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk/bin/dart --version
          echo "${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk/bin" >> $GITHUB_PATH

      - name: Verify Installation
        run: |
          echo "Flutter version:"
          ${{ env.FLUTTER_HOME }}/bin/flutter --version
          echo "Dart version:"
          ${{ env.FLUTTER_HOME }}/bin/dart --version
          
          DART_ACTUAL=$(${{ env.FLUTTER_HOME }}/bin/dart --version 2>&1 | awk '{print $4}')
          if [ "$DART_ACTUAL" != "${{ env.DART_VERSION }}" ]; then
            echo "::error::Dart version mismatch! Actual: $DART_ACTUAL, Required: ${{ env.DART_VERSION }}"
            echo "Debug info:"
            ls -la ${{ env.FLUTTER_HOME }}/bin/cache/dart-sdk
            exit 1
          fi

      - name: Setup Android
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          yes | ${{ env.FLUTTER_HOME }}/bin/sdkmanager --licenses || echo "License acceptance continued despite errors"
          yes | ${{ env.FLUTTER_HOME }}/bin/flutter doctor --android-licenses || echo "Android licenses continued despite errors"

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          ${{ env.FLUTTER_HOME }}/bin/flutter pub get
          ${{ env.FLUTTER_HOME }}/bin/flutter build apk --release --shrink

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
