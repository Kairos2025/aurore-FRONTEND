name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.22.0'
  PROJECT_DIR: 'aurore_frontend'
  # Compatible Firebase versions for Flutter 3.22.0
  FIREBASE_CORE_VERSION: '2.24.0'
  FIREBASE_AUTH_VERSION: '4.11.0'
  FIREBASE_ANALYTICS_VERSION: '10.4.0'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: 'flutter-${{ env.FLUTTER_VERSION }}'

      - name: Verify Installation
        run: |
          flutter --version
          flutter doctor -v

      - name: Enforce Compatible Versions
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Install yq for reliable YAML editing
          sudo snap install yq || sudo apt-get install -y yq

          # Backup original file
          cp pubspec.yaml pubspec.yaml.bak

          # Update Firebase dependencies
          yq eval ".dependencies.firebase_core = \"${{ env.FIREBASE_CORE_VERSION }}\"" -i pubspec.yaml
          yq eval ".dependencies.firebase_auth = \"${{ env.FIREBASE_AUTH_VERSION }}\"" -i pubspec.yaml
          yq eval ".dependencies.firebase_analytics = \"${{ env.FIREBASE_ANALYTICS_VERSION }}\"" -i pubspec.yaml

          # Update other critical dependencies
          yq eval '.dependencies.test = "1.24.0"' -i pubspec.yaml
          yq eval '.environment.sdk = ">=3.4.0 <4.0.0"' -i pubspec.yaml
          yq eval '.environment.flutter = ">=3.22.0 <4.0.0"' -i pubspec.yaml

          # Verify changes
          echo "Updated dependencies:"
          grep -E "firebase|test|sdk|flutter:" pubspec.yaml

      - name: Resolve Dependencies
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Clean up and get dependencies
          flutter clean
          flutter pub get
          
          # Verify dependency tree
          flutter pub deps

      - name: Build APK
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          set -e
          flutter build apk --release \
            --no-sound-null-safety \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.PROJECT_DIR }}/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7
