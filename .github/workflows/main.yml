name: Aurore Frontend CI/CD

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  # Using modern Flutter version that exists in GitHub's cache
  FLUTTER_VERSION: '3.36.0'  # Latest stable as of July 2024
  WORKING_DIR: './aurore_frontend'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Flutter (with fallback)
        id: install-flutter
        continue-on-error: true
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Verify Flutter Installation
        if: steps.install-flutter.outcome == 'success'
        run: |
          flutter --version
          flutter doctor -v

      - name: Fallback to Channel Install
        if: steps.install-flutter.outcome != 'success'
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Final Environment Check
        run: |
          echo "=== Final Versions ==="
          flutter --version
          dart --version
          echo "SDK constraints will be adjusted to:"
          flutter --version | grep -oE 'Dart [0-9.]+'

      - name: Prepare Environment
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          # 1. Ensure valid package name
          sed -i 's/name: .*/name: aurore_frontend/' pubspec.yaml
          
          # 2. Auto-adjust SDK version
          DART_VERSION=$(dart --version | awk '{print $4}')
          sed -i "s/sdk: \">=.*\"/sdk: \">=$DART_VERSION <4.0.0\"/" pubspec.yaml
          
          # 3. Enforce known-working dependency versions
          sed -i \
            -e 's/http: .*/http: ^1.1.0/' \
            -e 's/flutter_svg: .*/flutter_svg: ^2.1.9/' \
            -e 's/firebase_core: .*/firebase_core: ^4.3.0/' \
            -e 's/firebase_auth: .*/firebase_auth: ^6.3.0/' \
            pubspec.yaml

      - name: Resolve Dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs || echo "Build runner skipped"

      - name: Build APK
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          flutter clean
          flutter build apk --release \
            --dart-define=CI_ENV=true \
            --split-debug-info=build/symbols/ \
            --obfuscate

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ${{ env.WORKING_DIR }}/build/app/outputs/flutter-apk/app-release.apk
