name: Build Flutter APK and IPA

on:
  push:
    branches:
      - update-gradle

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pre-setup diagnostics
        run: |
          echo "Runner OS: $(uname -a)"
          echo "Initial PATH: $PATH"
          which flutter || echo "Flutter not found initially"
          which sdkmanager || echo "sdkmanager not found initially"
          sudo apt-get update
          sudo apt-get install -y curl unzip

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Android SDK
        id: android-setup
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: '9477386'
        continue-on-error: true

      - name: Verify Android SDK setup
        run: |
          echo "ANDROID_HOME: $ANDROID_HOME"
          ls -la $ANDROID_HOME/cmdline-tools || echo "cmdline-tools directory not found"
          sdkmanager --version || echo "sdkmanager not found"
          sdkmanager --list | grep "cmdline-tools" || echo "cmdline-tools listing failed"

      - name: Set up Flutter
        id: flutter-setup
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
          cache: true
        continue-on-error: true

      - name: Fallback Flutter setup (beta)
        if: steps.flutter-setup.outcome != 'success'
        run: |
          echo "Trying Flutter 3.26.0-0.2.pre (beta) as fallback"
          sudo rm -rf $HOME/.flutter
          curl -o flutter.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/beta/linux/flutter_linux_3.26.0-0.2.pre-beta.tar.xz
          mkdir -p $HOME/.flutter
          tar xf flutter.tar.xz -C $HOME/.flutter
          export PATH="$HOME/.flutter/flutter/bin:$PATH"
          echo "PATH=$HOME/.flutter/flutter/bin:$PATH" >> $GITHUB_ENV
          flutter --version
          flutter doctor -v

      - name: Verify Flutter setup
        run: |
          echo "Post-Flutter setup PATH: $PATH"
          which flutter || { echo "Flutter not found after setup"; exit 1; }
          flutter --version
          flutter doctor -v
          ls -la $HOME/.flutter/bin 2>/dev/null || echo "Flutter bin directory not found"

      - name: Verify project directory
        run: |
          ls -la aurore_frontend
          cat aurore_frontend/pubspec.yaml
          ls -la aurore_frontend/lib
          ls -la aurore_frontend/assets/images

      - name: Get dependencies
        run: |
          cd aurore_frontend
          flutter pub get

      - name: Run Dart analysis
        run: |
          cd aurore_frontend
          flutter analyze

      - name: Install Android NDK
        run: |
          sdkmanager --install "ndk;27.0.12077973" --sdk_root=$ANDROID_HOME
          echo "ndk.dir=$ANDROID_HOME/ndk/27.0.12077973" >> aurore_frontend/android/local.properties

      - name: Build APK
        run: |
          cd aurore_frontend
          flutter build apk --release --no-debug --verbose
          ls -la build/app/outputs/flutter-apk

      - name: Build IPA
        run: |
          cd aurore_frontend
          flutter build ios --release --no-codesign --no-debug --verbose
          ls -la build/ios

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: aurore_frontend/build/app/outputs/flutter-apk/app-release.apk

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: app-release-ipa
          path: aurore_frontend/build/ios/iphoneos/Runner.app

      - name: Debug on failure
        if: failure()
        run: |
          echo "Final PATH: $PATH"
          echo "ANDROID_HOME: $ANDROID_HOME"
          which flutter || echo "Flutter not found in debug"
          which sdkmanager || echo "sdkmanager not found in debug"
          flutter --version || echo "Flutter version check failed"
          flutter doctor -v || echo "Flutter doctor failed"
          sdkmanager --version || echo "sdkmanager version check failed"
          sdkmanager --list | grep "cmdline-tools" || echo "cmdline-tools listing failed"
          ls -la $HOME/.flutter/bin 2>/dev/null || echo "Flutter bin directory not found"
          ls -la $ANDROID_HOME/cmdline-tools 2>/dev/null || echo "cmdline-tools directory not found"
          cd aurore_frontend
          flutter analyze || echo "Flutter analyze failed"
          cat pubspec.yaml
          find . -name "*.dart" | xargs cat
